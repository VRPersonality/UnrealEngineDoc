digraph "TStructTypeBitSet::TStructTypeBitSet"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TStructTypeBitSet::\lTStructTypeBitSet",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TStructTypeBitSet::\lGetTypeBitSet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#ad5462c98a644491ee616b6fc04850470",tooltip="Gets a bitset representing a single struct type."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TStructTypeBitSet::\lGetTypeHash",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#af4510ba313c69b55a63fe18effcfe48d",tooltip="Hash function for the bitset."];
  Node3 -> Node3 [id="edge3_Node000003_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TStructTypeBitSet::\loperator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#aa7db5e6e912bb98465871ca3caf65620",tooltip="Inequality operator."];
  Node1 -> Node5 [id="edge5_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TStructTypeBitSet::\loperator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#a0113060523a03cfb4f0505dac82d4518",tooltip="Performs a union operation with another bitset."];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TStructTypeBitSet::\loperator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#a9fef78b6efdfa5ed27046d0f741fd2b8",tooltip="Performs a difference operation with another bitset."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TStructTypeBitSet::\loperator\<\<",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#ab8c9e726c33517554e0a923878c4eb88",tooltip="Stream insertion operator for serialization."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TStructTypeBitSet::\loperator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#add3e0d05df486b88fafdb7b1e23410fa",tooltip="Equality operator."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TStructTypeBitSet::\lRemove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d16/structTStructTypeBitSet.html#adaad9c2684726cc74decaf57bc2b6cef",tooltip="Removes the bits from another bitset from this one (difference)."];
}
