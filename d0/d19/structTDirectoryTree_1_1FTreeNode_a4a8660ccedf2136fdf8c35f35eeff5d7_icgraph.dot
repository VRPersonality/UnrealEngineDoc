digraph "TDirectoryTree::FTreeNode::HasValue"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TDirectoryTree::FTreeNode\l::HasValue",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Report whether the node has a value, which is equivalent to the node's path existing in the Directory..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDirectoryTree::FIterator\lInternal::FIteratorInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#ab9744dae37b9bdb5f3f8c17ab9458b6e",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TDirectoryTree::FIterator\lInternal::FIteratorInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#aafa9fe5c86d3d347411866ede4a7ab36",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDirectoryTree::FIterator\lInternal::FIteratorInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#aa75441803e70f147c4647b6e89ef8ed3",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TDirectoryTree::FIterator\lInternal::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#a42b0280e8c2dde0d5a9488ab024c50c1",tooltip=" "];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TDirectoryTree::FIterator\lInternal::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#a93c1d5a7d985e4677df6ed5d16ce075c",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TDirectoryTree::FTreeNode\l::ConditionalCompactNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a92dd4b5fbb394c418c0d4c3affeb20d8",tooltip="Merge the node with its direct child if possible, and if so adjust the input RelPath to match."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TDirectoryTree::FTreeNode\l::Remove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a09c3ff5a89134db663c4c5dcdc5b1a0c",tooltip="Remove the Value if it exists in the tree."];
  Node8 -> Node8 [id="edge8_Node000008_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TDirectoryTree::FTreeNode\l::Find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a36218170ed9bd86757e682fc0a661919",tooltip="Return pointer to the Value stored in RelPath, if RelPath exists in the tree."];
  Node9 -> Node9 [id="edge10_Node000009_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TDirectoryTree::FTreeNode\l::FindOrAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#ab8175a05fbd95dcc4805a6eb2676a52f",tooltip="Recursively search the node's subtree to find the given relative directory name, adding nodes for the..."];
  Node10 -> Node10 [id="edge12_Node000010_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge13_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TDirectoryTree::FTreeNode\l::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a0bbc6bf9a2d28367e56755fcb6f59838",tooltip="Are no paths contained within the node."];
  Node1 -> Node8 [id="edge14_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge15_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TDirectoryTree::FTreeNode\l::RemoveValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aae3c36c623a442b500fcd9b117e56363",tooltip="Set HasValue=false, and destruct any existing old value."];
  Node12 -> Node13 [id="edge16_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TDirectoryTree::FTreeNode\l::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aaa8263287267adc2037e1eba37cacd06",tooltip=" "];
  Node12 -> Node8 [id="edge17_Node000012_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node14 [id="edge18_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TDirectoryTree::FTreeNode\l::Reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a8ea9cbc31bc02e3b90731af030ac6cdd",tooltip="Remove Value and ChildNodes, return state to default-constructed state."];
  Node14 -> Node10 [id="edge19_Node000014_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node15 [id="edge20_Node000012_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="TDirectoryTree::FTreeNode\l::SetDefaultValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a62158a2c2dea6a367f565c991c4a1d6c",tooltip="Set HasValue=true, and default-construct the node's value, after destructing any existing old value."];
  Node15 -> Node10 [id="edge21_Node000015_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node16 [id="edge22_Node000012_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TDirectoryTree::FTreeNode\l::SetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a98a27e0b57ab10d223fbd4a730d2b297",tooltip="Set HasValue=true, and move InValue into the node's value, after destructing any existing old value."];
  Node16 -> Node17 [id="edge23_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="TDirectoryTree::FTreeNode\l::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#abc4c56c9d90b0fcae20ab78ccce26112",tooltip=" "];
  Node16 -> Node13 [id="edge24_Node000016_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge25_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="TDirectoryTree::FIterator\lInternal::TraverseToValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#a399536988fb5969f2c58b89e7f660d10",tooltip=" "];
  Node18 -> Node2 [id="edge26_Node000018_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node19 [id="edge27_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="TDirectoryTree::FIterator\lInternal::operator++",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d96/structTDirectoryTree_1_1FIteratorInternal.html#ac7f17fd63d8226d4e09299b07ea66361",tooltip=" "];
  Node1 -> Node20 [id="edge28_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="TDirectoryTree::FTreeNode\l::TryFindClosestPath",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aed4ccd3da2d1663e17939c8e330183bf",tooltip="Recursively search the node's subtree to find the given RelPath."];
  Node20 -> Node20 [id="edge29_Node000020_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge30_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="TDirectoryTree::FTreeNode\l::TryGetChildren",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a81cdb4e026c8f14e7e939e03df5f2022",tooltip=" "];
  Node21 -> Node21 [id="edge31_Node000021_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
