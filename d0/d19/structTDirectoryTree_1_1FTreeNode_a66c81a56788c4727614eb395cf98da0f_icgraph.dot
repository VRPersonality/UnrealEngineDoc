digraph "TDirectoryTree::FTreeNode::FTreeNode"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TDirectoryTree::FTreeNode\l::FTreeNode",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node1 [id="edge1_Node000001_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node2 [id="edge2_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDirectoryTree::FTreeNode\l::FTreeNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a6f3d1fcba93f9d081b8645abf8b8f10b",tooltip=" "];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TDirectoryTree::FTreeNode\l::FTreeNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a1d8fc0f61975d63fb14bb29323cbe8a1",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDirectoryTree::FTreeNode\l::ConditionalCompactNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a92dd4b5fbb394c418c0d4c3affeb20d8",tooltip="Merge the node with its direct child if possible, and if so adjust the input RelPath to match."];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TDirectoryTree::FTreeNode\l::Remove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a09c3ff5a89134db663c4c5dcdc5b1a0c",tooltip="Remove the Value if it exists in the tree."];
  Node5 -> Node5 [id="edge6_Node000005_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge7_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TDirectoryTree::FTreeNode\l::ContainsChildPaths",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a945536fcf725e8cf57fe73358c5c17c2",tooltip="Recursively search this node's subtree for the given relative path, then return whether that path has..."];
  Node6 -> Node6 [id="edge8_Node000006_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node7 [id="edge9_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TDirectoryTree::FTreeNode\l::Find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a36218170ed9bd86757e682fc0a661919",tooltip="Return pointer to the Value stored in RelPath, if RelPath exists in the tree."];
  Node7 -> Node7 [id="edge10_Node000007_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge11_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TDirectoryTree::FTreeNode\l::FindOrAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#ab8175a05fbd95dcc4805a6eb2676a52f",tooltip="Recursively search the node's subtree to find the given relative directory name, adding nodes for the..."];
  Node8 -> Node8 [id="edge12_Node000008_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge13_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TDirectoryTree::FTreeNode\l::GetAllocatedSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a72a396cdec15a751df64b3ec24df218b",tooltip="How much memory is used by *this, not counting sizeof(*this)."];
  Node1 -> Node10 [id="edge14_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TDirectoryTree::FTreeNode\l::InsertChildNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a768045476f49769b75875e903545f7c7",tooltip="Insert the given RelPath and ChildNode at the given index; must be the index from FindInsertionIndex."];
  Node10 -> Node8 [id="edge15_Node000010_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge16_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TDirectoryTree::FTreeNode\l::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#abc4c56c9d90b0fcae20ab78ccce26112",tooltip=" "];
  Node1 -> Node12 [id="edge17_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TDirectoryTree::FTreeNode\l::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aaa8263287267adc2037e1eba37cacd06",tooltip=" "];
  Node1 -> Node13 [id="edge18_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TDirectoryTree::FTreeNode\l::Realloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a4defe6a022c25a091ca9161db6b54dc5",tooltip="Reallocate the NumChildNodes arrays to match the given new capacity."];
  Node13 -> Node10 [id="edge19_Node000013_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node11 [id="edge20_Node000013_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node14 [id="edge21_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TDirectoryTree::FTreeNode\l::Shrink",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a9b57846671d536b33f0a1bedf8c7690e",tooltip="Reduce memory used in buffers."];
  Node1 -> Node5 [id="edge22_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge23_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge24_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="TDirectoryTree::FTreeNode\l::TryFindClosestPath",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aed4ccd3da2d1663e17939c8e330183bf",tooltip="Recursively search the node's subtree to find the given RelPath."];
  Node15 -> Node15 [id="edge25_Node000015_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge26_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TDirectoryTree::FTreeNode\l::TryGetChildren",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a81cdb4e026c8f14e7e939e03df5f2022",tooltip=" "];
  Node16 -> Node16 [id="edge27_Node000016_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
