digraph "TDirectoryTree::FTreeNode::operator="
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TDirectoryTree::FTreeNode\l::operator=",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDirectoryTree::FTreeNode\l::FTreeNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a66c81a56788c4727614eb395cf98da0f",tooltip=" "];
  Node2 -> Node2 [id="edge2_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CopyTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a92a792818d36648fdd3330e4ad4529e5",tooltip="CopyTemp will enforce the creation of a prvalue which can bind to rvalue reference parameters."];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDirectoryTree::FTreeNode\l::Realloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a4defe6a022c25a091ca9161db6b54dc5",tooltip="Reallocate the NumChildNodes arrays to match the given new capacity."];
  Node4 -> Node2 [id="edge5_Node000004_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node5 [id="edge6_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TDirectoryTree::FTreeNode\l::GetNumChildNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#acdee77930e99f5bda99afa5b76b994f5",tooltip=" "];
  Node4 -> Node6 [id="edge7_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
  Node1 -> Node7 [id="edge8_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TDirectoryTree::FTreeNode\l::SetNumChildNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a8bb888aa6d0b9b2bfa0136144406e89d",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TDirectoryTree::FTreeNode\l::SetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a98a27e0b57ab10d223fbd4a730d2b297",tooltip="Set HasValue=true, and move InValue into the node's value, after destructing any existing old value."];
  Node8 -> Node6 [id="edge10_Node000008_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge11_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TDirectoryTree::FTreeNode\l::RemoveValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aae3c36c623a442b500fcd9b117e56363",tooltip="Set HasValue=false, and destruct any existing old value."];
  Node9 -> Node10 [id="edge12_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TDirectoryTree::FTreeNode\l::HasValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a4a8660ccedf2136fdf8c35f35eeff5d7",tooltip="Report whether the node has a value, which is equivalent to the node's path existing in the Directory..."];
}
