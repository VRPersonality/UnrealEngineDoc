digraph "TDirectoryTree::FTreeNode::TryFindClosestPath"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TDirectoryTree::FTreeNode\l::TryFindClosestPath",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Recursively search the node's subtree to find the given RelPath."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDirectoryTree::FTreeNode\l::FTreeNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a66c81a56788c4727614eb395cf98da0f",tooltip=" "];
  Node2 -> Node2 [id="edge2_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FPathViews::Append",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/dbc/classFPathViews.html#acba4c24881ea9e0188a80f6b434eb3d3",tooltip="Appends each suffix argument to the path in the builder and ensures that there is a separator between..."];
  Node3 -> Node3 [id="edge4_Node000003_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge5_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDirectoryTree::FTreeNode\l::FindInsertionIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a7e827418b760dcd228f7de2fbebcd3d9",tooltip="Search the sorted ChildNode RelPaths for the given FirstPathComponent, which must be only a single pa..."];
  Node4 -> Node5 [id="edge6_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::DirectoryTree::\lFindInsertionIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d0b/namespaceUE_1_1DirectoryTree.html#a06aba12cf666bd94054598ec6d1d3cac",tooltip=" "];
  Node4 -> Node6 [id="edge7_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TDirectoryTree::FTreeNode\l::GetNumChildNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#acdee77930e99f5bda99afa5b76b994f5",tooltip=" "];
  Node1 -> Node7 [id="edge8_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::DirectoryTree::\lFixupPathSeparator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d0b/namespaceUE_1_1DirectoryTree.html#a9ce0cf7cb150fc7243d5a9926bd0ee03",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TDirectoryTree::FTreeNode\l::GetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a71f2bd6140fe9d4989ef7081c8a2c906",tooltip="Get a reference to the node's Value."];
  Node1 -> Node9 [id="edge10_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TDirectoryTree::FTreeNode\l::HasValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a4a8660ccedf2136fdf8c35f35eeff5d7",tooltip="Report whether the node has a value, which is equivalent to the node's path existing in the Directory..."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TStringView::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dbe/classTStringView.html#a5e42baca1302aa14effca3421d04f51c",tooltip="Returns whether the string view is empty."];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TStringBuilderBase::Len",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbc/classTStringBuilderBase.html#aeec971cfb8c8be8459e26d89528266e6",tooltip=" "];
  Node1 -> Node12 [id="edge13_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TStringBuilderBase\l::RemoveSuffix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbc/classTStringBuilderBase.html#ad80d37fa5d95d26f11d7d7c6b82cdd83",tooltip="Modifies the string builder to remove the given number of characters from the end."];
  Node1 -> Node13 [id="edge14_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FPathViews::SplitFirstComponent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/dbc/classFPathViews.html#add2e23e30957c3890c26f0a1eafd6684",tooltip="Split the given absolute or relative path into its topmost directory and the relative path from that ..."];
  Node1 -> Node1 [id="edge15_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge16_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FPathViews::TryMakeChild\lPathRelativeTo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/dbc/classFPathViews.html#a307dc1f3bd1cb056cf573c82e6fc5c3f",tooltip="Check whether Parent is a parent path of Child and report the relative path if so."];
}
