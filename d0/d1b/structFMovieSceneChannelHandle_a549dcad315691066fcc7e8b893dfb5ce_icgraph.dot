digraph "FMovieSceneChannelHandle::Cast"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FMovieSceneChannelHandle\l::Cast",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Cast this handle to a handle of a related type."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TSequencerChannelInterface\lCommon::CreateChannelModel_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#aa0d11a183ca54cb633909a62368935cf",tooltip="Create a new channel model for this type of channel."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TSequencerChannelInterface\lCommon::CreateChannelView_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#ab6e8c95d7b714a49d2db75503b59d5b3",tooltip="Create a new channel view for this type of channel."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TSequencerChannelInterface\lCommon::CreateCurveEditorModel_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#af598ba9a316b23096207b9f38e4733a0",tooltip="Create a new model for this channel that can be used on the curve editor interface."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TPerlinNoiseChannelInterface\l::CreateKeyEditor_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d50/structTPerlinNoiseChannelInterface.html#a1f9d83f63fe16d62c726d5b11ee3a9eb",tooltip="Create an editor on the sequencer node tree."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TSequencerChannelInterface\lCommon::CreateKeyEditor_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#a7d6545c4ec9c947200cc49dd2d83608d",tooltip="Create an editor on the sequencer node tree."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FMovieSceneChannelProxy\l::GetChannelByName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d5f/structFMovieSceneChannelProxy.html#a91b24cab8558e87e2475f42c79a5f179",tooltip="Get the channel with the specified name, assuming it is of a given type."];
  Node7 -> Node7 [id="edge7_Node000007_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TSequencerChannelInterface\lCommon::GetKeyStruct_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#acedcea4f20069dd159255a9e34d118ca",tooltip="Get an editable key struct for the specified key."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TSequencerChannelInterface\lCommon::SupportsCurveEditorModels_Raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dae/structTSequencerChannelInterfaceCommon.html#ad8e3d146526c3a19dc12f5d9bcb848cb",tooltip="Whether this channel supports curve models."];
}
