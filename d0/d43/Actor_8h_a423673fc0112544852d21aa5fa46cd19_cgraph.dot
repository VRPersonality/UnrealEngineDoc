digraph "UCLASS"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UCLASS",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Actor is the base class for an Object that can be placed or spawned in a level."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Cast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d55/Casts_8h.html#af337187a7ebe36fac35ea41db8a65ba9",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CastChecked",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d55/Casts_8h.html#aab30506d0b00905fe332e42486635487",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UObjectBaseUtility\l::GetInterfaceAddress",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d7b/classUObjectBaseUtility.html#a0e8391e9eb082502a5b2b60c2974cfb2",tooltip="Returns a pointer to this object safely converted to a pointer of the specified interface class."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="EnumHasAnyFlags",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/de7/EnumClassFlags_8h.html#a584482cc5c314e3e8ea8d24c7adf9f6e",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UStruct::IsChildOf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d19/classUStruct.html#a8e3ec7a5e338fc3b99e3d81bf07d4311",tooltip="Returns true if this struct either is class T, or is a child of class T."];
  Node7 -> Node7 [id="edge7_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FGuid::IsValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d29/structFGuid.html#acec214c823edf4d7c9b744a56518880f",tooltip="Checks whether this GUID is valid or not."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="IsValidChecked",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dbf/Object_8h.html#a46adad869b3ed027cb126903b365d6bb",tooltip="Test validity of object similar to IsValid(Test) however the null pointer test is skipped."];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FInternalUObjectBaseUtility\lIsValidFlagsChecker::CheckObject\lValidBasedOnItsFlags",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d1a/structFInternalUObjectBaseUtilityIsValidFlagsChecker.html#a5f0624963bb29d162cec1a0e9dfe73d6",tooltip=" "];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="ObjectPtrDecay",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d75/ObjectPtr_8h.html#a96a2c7c11fd062f80dfcc5a841754895",tooltip=" "];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TArray::Reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a246ab624b720b01fd83764700aab8cf9",tooltip="Same as empty, but doesn't change memory allocations, unless the new size is larger than the current ..."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="ToRawPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d75/ObjectPtr_8h.html#af0ba8050fb680eab39940b2fc0d96440",tooltip=" "];
  Node13 -> Node14 [id="edge14_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TObjectPtr::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d0b/structTObjectPtr.html#aaaac764c657d4d701ca5a81446d4e1b3",tooltip=" "];
  Node14 -> Node15 [id="edge15_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="ObjectPtr_Private::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de0/namespaceObjectPtr__Private.html#a16c240bb701b8e7d3d05cf586cc922cc",tooltip="Resolve and return the underlying reference."];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FObjectPtr::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d0d/structFObjectPtr.html#a05ba2fa0f019cad9fcd6304385ba5724",tooltip=" "];
  Node16 -> Node17 [id="edge17_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::CoreUObject::Private\l::ResolveObjectHandle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a745deda04ce0a419e649330f978ccefe",tooltip=" "];
  Node17 -> Node18 [id="edge18_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::CoreUObject::Private\l::OnHandleRead",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#ae4818c513ad846109c8c58a40ad0292f",tooltip=" "];
  Node17 -> Node19 [id="edge19_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::CoreUObject::Private\l::ReadObjectHandlePointerNoCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a05b42895ea5f93b9398be3e8cc061d3a",tooltip="Read the handle as a pointer without checking if it is resolved."];
  Node17 -> Node20 [id="edge20_Node000017_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::CoreUObject::Private\l::ResolveObjectHandleNoRead",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a2ceee97798c503a5b003271969f9cc56",tooltip=" "];
  Node20 -> Node21 [id="edge21_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="IsObjectHandleNull",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d34/ObjectHandle_8h.html#a1b0da599dda7e63634dbd31f1bb4bd26",tooltip=" "];
  Node20 -> Node22 [id="edge22_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="IsObjectHandleResolved",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d34/ObjectHandle_8h.html#af3091d584a4fe1e738c80d0a9e4f13f6",tooltip=" "];
  Node22 -> Node21 [id="edge23_Node000022_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge24_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="UE::RemoteObject::Handle\l::IsRemote",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d24/namespaceUE_1_1RemoteObject_1_1Handle.html#a0238fbf70df6bedb70acb1924707cf41",tooltip="Checks if an object associated with the specified unique id is remote."];
  Node20 -> Node24 [id="edge25_Node000020_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="IsObjectHandleTypeSafe",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d34/ObjectHandle_8h.html#a38f7811202ea40dd9b668b73bbe81e24",tooltip=" "];
  Node20 -> Node23 [id="edge26_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node25 [id="edge27_Node000020_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="UE::CoreUObject::Private\l::MakeObjectHandle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a6ee32c4b54fd56c5edcc7468e45f68eb",tooltip="these functions are always defined regardless of UE_WITH_OBJECT_HANDLE_LATE_RESOLVE value"];
  Node20 -> Node19 [id="edge28_Node000020_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node26 [id="edge29_Node000020_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="UE::RemoteObject::Handle\l::ResolveObject",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d24/namespaceUE_1_1RemoteObject_1_1Handle.html#a63794e32c2ed473268264abdb5398d3a",tooltip="Resolves a remote object given its stub, aborting the active transaction if the object is unavailable..."];
  Node20 -> Node27 [id="edge30_Node000020_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::RemoteObject::Handle\l::TouchResidentObject",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d24/namespaceUE_1_1RemoteObject_1_1Handle.html#a4bfff621b4c689da563fc272aa0d8c66",tooltip=" "];
}
