digraph "TFindObjectReferencers::TFindObjectReferencers"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TFindObjectReferencers\l::TFindObjectReferencers",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TMultiMap\< T *, UObject\l * \>::TMultiMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/df5/classTMultiMap.html#ad7ee65752257870512d21cd554d0192b",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::Contains",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a3f4e0dcec4bd7d5ea2872b0d4cbd5fde",tooltip="Checks if this array contains the element."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TMapBase::GenerateKeyArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dad/classTMapBase.html#a3032330fb22e686f83a2e46a987f1796",tooltip="Generate an array from the keys in this map."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TArray::Empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#ae4faf7d28150050064620a725e5df3c2",tooltip="Empties the array."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FFindReferencersArchive\l::GetReferenceCounts",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d2e/classFFindReferencersArchive.html#aa568f009123e2ffced537db116653c37",tooltip="Retrieves the number of references from PotentialReferencer list of TargetObjects."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UObjectBaseUtility\l::IsIn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d7b/classUObjectBaseUtility.html#a311da3557bb28d74428fc245fdedae39",tooltip="Return the dispatch to IsInOuter or IsInPackage depending on SomeOuter's class."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UObjectBaseUtility\l::IsTemplate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d7b/classUObjectBaseUtility.html#a108e26ac9be4c85987dbbf8af23cc8fc",tooltip="Determines whether this object is a template object by checking flags on the object and the outer cha..."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TArray::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#adcbf9ca48677a9c0c3830cd862dd40d8",tooltip="Returns number of elements in array."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TArray::Reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a246ab624b720b01fd83764700aab8cf9",tooltip="Same as empty, but doesn't change memory allocations, unless the new size is larger than the current ..."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TMapBase::Reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dad/classTMapBase.html#afbbe0a79b6b5f2f5767245295c88821d",tooltip="Efficiently empties out the map but preserves all allocations and capacities."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FFindReferencersArchive\l::ResetPotentialReferencer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d2e/classFFindReferencersArchive.html#acc110aa723bf9fe31d17073c2ec73eb4",tooltip="Resets the reference counts."];
}
