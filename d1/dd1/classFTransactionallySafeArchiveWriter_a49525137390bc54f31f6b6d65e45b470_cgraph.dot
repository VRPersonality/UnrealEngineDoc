digraph "FTransactionallySafeArchiveWriter::Serialize"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FTransactionallySafeArchive\lWriter::Serialize",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="IntCastChecked",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a886a4da9a454571f96b5c89d4f26bc31",tooltip="Cast and check that value fits in OutType."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="IntFitsIn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a9a4800af259748724f3bddeaa0ebdad0",tooltip="Test if value can make a lossless static_cast roundtrip via OutType without a sign change."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FTransactionallySafeArchive\lWriter::MaybeRegisterCommitHandler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dd1/classFTransactionallySafeArchiveWriter.html#ac32eddf170c3a1572b49490cb25130df",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FTransactionallySafeArchive\lWriter::RegisterCommitHandler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dd1/classFTransactionallySafeArchiveWriter.html#abc23b51aeafa7c84ee700ba321e30c80",tooltip=" "];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FTransactionallySafeArchive\lWriter::DoDeferredWrites",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dd1/classFTransactionallySafeArchiveWriter.html#a73b91557d4e99cb500c2219946c4e102",tooltip=" "];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FArchive::FArchive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classFArchive.html#ad36f53e50855130b981a47560e7ed48c",tooltip=" "];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TArray::GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a5b7af561ae2c8731aca5c33c736fb4f2",tooltip="Helper function for returning a typed pointer to the first array entry."];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TArray::NumBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#ad61c3e38658ed653d798e29a4d00fb76",tooltip=" "];
  Node6 -> Node10 [id="edge9_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TArray::Reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a246ab624b720b01fd83764700aab8cf9",tooltip="Same as empty, but doesn't change memory allocations, unless the new size is larger than the current ..."];
}
