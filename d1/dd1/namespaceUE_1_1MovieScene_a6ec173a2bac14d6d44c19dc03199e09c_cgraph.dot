digraph "UE::MovieScene::ConvertToFrameTimeRange"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::MovieScene::ConvertTo\lFrameTimeRange",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TRangeBound::Exclusive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d71/classTRangeBound.html#aeb5309e84d6ada149a0dea5bf01ce702",tooltip="Returns a closed bound that excludes the specified value."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FFrameTime::FromDecimal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8e/structFFrameTime.html#af7aca34caf669abadbccd7eb10dcda62",tooltip="Convert a decimal representation to a frame time Note that sub frames are always positive,..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FFrameTime::FFrameTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8e/structFFrameTime.html#a903e2d7e1524ff9a0cf8158a33b535f4",tooltip="Default constructor initializing to zero."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FMath::Clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a7dbca5929b2ea7f13304eb4c927dab6c",tooltip="Clamps X to be between Min and Max, inclusive."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TRange::GetLowerBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#ad5b6523397433d35458f84a337807f7c",tooltip="Get the range's lower bound."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TRange::GetLowerBoundValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#ab928fe2b60e5e398ce09e5b090c61cd4",tooltip="Get the value of the lower bound."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TRange::GetUpperBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#aaa525d9b635713ec3cefd4ea64d54e4a",tooltip="Get the range's upper bound."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TRange::GetUpperBoundValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#ac4b5132498904f7a7b68cff015f76f49",tooltip="Get the value of the upper bound."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TRange::HasLowerBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#a23038975c1616ed4751353b766011881",tooltip="Check whether the range has a lower bound."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TRange::HasUpperBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d01/classTRange.html#aa95fd0b277ac04a966557b6bafca0669",tooltip="Check whether the range has an upper bound."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TRangeBound::Inclusive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d71/classTRangeBound.html#aab0bd6fc9977a042858ad97cfbfd73c7",tooltip="Returns a closed bound that includes the specified value."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TRangeBound::IsInclusive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d71/classTRangeBound.html#ab026db32a3b51fe9294cfa1fbd9433fc",tooltip="Checks whether the bound is inclusive."];
}
