digraph "UE::MovieScene::MakeChannelProxy"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::MovieScene::MakeChannel\lProxy",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Utility function for making a channel proxy with one channel that is maybe overriden by another chann..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FMovieSceneChannelProxyData::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d10/structFMovieSceneChannelProxyData.html#af3450badb0ef9e2a04acf7d53ae5f3cd",tooltip="Add a new channel to the proxy."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FMovieSceneChannelProxyData\l::AddInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d10/structFMovieSceneChannelProxyData.html#a668febf1d35efb4be6a59199836d4991",tooltip="Implementation that adds a channel to an entry, creating a new entry for this channel type if necessa..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FMovieSceneChannelEntry\l::GetChannelTypeName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dfa/structFMovieSceneChannelEntry.html#ad51c1f1c02f97e8eead78ba78d38f854",tooltip="Get the type name of the channels stored in this entry."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Algo::LowerBoundBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d33/namespaceAlgo.html#a871a20b03aed6b970683183e56424e40",tooltip="Performs binary search, resulting in position of the first element with projected value >= Value usin..."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddf/StringConv_8h.html#a4111b73e6a9d7101173e7223118962f3",tooltip=" "];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="GetNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddf/StringConv_8h.html#a3caf5874b63a514dc33c219ec83eedbf",tooltip=" "];
  Node5 -> Node8 [id="edge7_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="AlgoImpl::LowerBoundInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d64/namespaceAlgoImpl.html#a281a9779ff04017a143a53b5c446a121",tooltip="Performs binary search, resulting in position of the first element >= Value."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Invoke",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/deb/Invoke_8h.html#a66d3e79358998f56001f20726270e390",tooltip="Invokes a callable with a set of arguments."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Forward",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a68f280c1d561a8899a1e9e3ea8405d00",tooltip="Forward will cast a reference to an rvalue reference."];
  Node8 -> Node11 [id="edge10_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Projection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/df0/Projection_8h.html#a13dceeb18d2035bd0b861bf3698ede9f",tooltip="Projection() is a related function to Invoke(), in that it can be used to invoke an object with a set..."];
  Node11 -> Node11 [id="edge11_Node000011_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Core::Private::\lTIsMemberPointerToFunction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/de6/namespaceUE_1_1Core_1_1Private.html#a6a97c58e76257e63c3e47675427da48b",tooltip=" "];
  Node5 -> Node11 [id="edge13_Node000005_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node13 [id="edge14_Node000003_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FMovieSceneChannelHandle\l::TrackChannelTypeName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d1b/structFMovieSceneChannelHandle.html#a636a7df75f134f8ff280689b5d4dda98",tooltip=" "];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::MovieScene::GetChannel\lOverride",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dd1/namespaceUE_1_1MovieScene.html#a098d3b2ffa0c4c3316d752f1cb06bb56",tooltip="Utility function to return a channel override."];
  Node14 -> Node14 [id="edge16_Node000014_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node1 [id="edge17_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge18_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="MakeShared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d17/SharedPointer_8h.html#a263c00158120ebc1c5485f1201a6f34d",tooltip="MakeShared utility function."];
  Node15 -> Node10 [id="edge19_Node000015_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge20_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="SharedPointerInternals\l::TIntrusiveReferenceController\l::GetObjectPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d0f/classSharedPointerInternals_1_1TIntrusiveReferenceController.html#abbed2fe02963777a4ec2fb6c2d619beb",tooltip=" "];
  Node15 -> Node17 [id="edge21_Node000015_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Core::Private::\lMakeSharedRef",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/de6/namespaceUE_1_1Core_1_1Private.html#aff81f6fda6cd780a91812bea83b7f9d1",tooltip=" "];
  Node15 -> Node18 [id="edge22_Node000015_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="SharedPointerInternals\l::NewIntrusiveReferenceController",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d6a/namespaceSharedPointerInternals.html#a27870bf9f0653ce64eb0333857178446",tooltip="Creates an intrusive reference controller."];
  Node18 -> Node10 [id="edge23_Node000018_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node19 [id="edge24_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
  Node1 -> Node20 [id="edge25_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="FMovieSceneChannelProxyData\l::SetExtendedEditorData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d10/structFMovieSceneChannelProxyData.html#a30fd0addedde5e5cac3264ef6b9fbf39",tooltip=" "];
  Node20 -> Node21 [id="edge26_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="FMovieSceneChannelHandle\l::GetChannelIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d1b/structFMovieSceneChannelHandle.html#ac7b71c29fbba9ca0fd270cbcb9ea16c0",tooltip="Access this channel's index."];
  Node20 -> Node22 [id="edge27_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="FMovieSceneChannelHandle\l::GetChannelTypeName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d1b/structFMovieSceneChannelHandle.html#a244147946f22bc7f8ed54ac7db1f53f3",tooltip="Access this channel's type identifier."];
  Node20 -> Node23 [id="edge28_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="FMovieSceneChannelEditor\lDataEntry::SetExtendedEditorData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbb/structFMovieSceneChannelEditorDataEntry.html#af80143daea7d63f0dd3da24e4fe013c1",tooltip="Set the extended channel-type specific editor data on an already added channel entry."];
  Node23 -> Node10 [id="edge29_Node000023_Node000010",color="steelblue1",style="solid",tooltip=" "];
}
