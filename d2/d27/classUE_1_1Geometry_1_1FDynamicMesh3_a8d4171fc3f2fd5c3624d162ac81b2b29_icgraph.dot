digraph "UE::Geometry::FDynamicMesh3::IsTriangle"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Geometry::FDynamicMesh3\l::IsTriangle",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::FDynamicMesh\lTriangleAttributeChange::Apply",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d46/classUE_1_1Geometry_1_1FDynamicMeshTriangleAttributeChange.html#a339e9fb5e756eef51d07933ae330dbdc",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Geometry::FDynamicMesh3\l::GetTriangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a532c286a734d32e48c7948b22dd27fa1",tooltip="Get triangle vertices."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::MeshDeformation\l::ConstructCotangentLaplacian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/df1/namespaceUE_1_1MeshDeformation.html#abb5ba9e1b374edf6d77271067c602718",tooltip="Construct a sparse matrix representation using a cotangent-weighted Laplacian."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::MeshDeformation\l::ConstructCotangentLaplacian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/df1/namespaceUE_1_1MeshDeformation.html#aaf997123f9e9bc9c6853c6ba0330b986",tooltip="Construct a sparse matrix representation using a pre-multiplied cotangent-weighted Laplacian."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::FDynamicMesh3\l::GetTriangleRef",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#ab63e17636c1eac64a4b9fd49362cf738",tooltip="Get triangle vertices."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::FDynamicMesh3\l::GetTriEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a1df28cf58362a711ebd5f55b55be35cf",tooltip="Get one of the edges of a triangle."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::FDynamicMesh3\l::GetTriEdges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#af44c0f52fce24a0eeac2167bbffb9e4f",tooltip="Get triangle edges."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Geometry::FDynamicMesh3\l::EnumerateTriEdgeIDsFromEdgeID",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a1da731e8a46571f74b5f7d79eaf7ae6e",tooltip="Applies a given function to both TriEdgeIDs which a given EdgeID is associated with."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Geometry::FDynamicMesh3\l::EnumerateTriEdgeIDsFromTriID",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#afc0240d5c307a4ef335ec214aa173db2",tooltip="Applies a given function to both TriEdgeIDs which each EdgeID in a given Triangle is associated with."];
  Node8 -> Node10 [id="edge10_Node000008_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Geometry::FDynamicMesh3\l::GetTriEdgesRef",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a5ebf50396217d6da83ff3614d47ff23b",tooltip="Get triangle edges."];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Geometry::FPolygroup\lSet::SetGroup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc4/structUE_1_1Geometry_1_1FPolygroupSet.html#aa109d9badd60c70f1e5d3bcff1cecc12",tooltip="Set the PolygroupID for a TriangleID."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Geometry::FDynamicMesh3\l::SetTriangleGroup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#acb1ad1df88bda313d5ed6cee20059949",tooltip=" "];
  Node13 -> Node12 [id="edge14_Node000013_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
