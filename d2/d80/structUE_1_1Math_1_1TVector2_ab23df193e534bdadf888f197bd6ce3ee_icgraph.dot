digraph "UE::Math::TVector2::TVector2"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Math::TVector2\l::TVector2",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor (no initialization)."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TVector2\l::Clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ab29dd58bbb86454c5a9fba55b16e0ac6",tooltip="Returns a vector with each component clamped between a minimum and a maximum."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Math::TVector2\l::ClampAxes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a000cebb63d58fefeddbe6bb0799429ac",tooltip="Creates a copy of this vector with both axes clamped to the given range."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::AI::InvBilinear2DClamped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dfa/namespaceUE_1_1AI.html#a61518e1e0571803b0543e59c89ab64ba",tooltip="Finds the UV coordinates of the 'Point' on bilinear patch A,B,C,D."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TVector2\l::ComponentMax",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a52802de8886b8c9a860f886ba0af190f",tooltip="Gets the component-wise max of two vectors."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TVector2\l::ComponentMin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a0c60c810eec62490f59814e9b77fb58b",tooltip="Gets the component-wise min of two vectors."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TVector2\l::ComponentwiseAllGreaterOr\lEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a9a3e4b4f744907a2a4ef142fc978da50",tooltip="Checks whether both components of this vector are greater than or equal to another."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TVector2\l::ComponentwiseAllGreaterThan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a1c0fa377a741497edc8f44ab7607533e",tooltip="Checks whether both components of this vector are greater than another."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Math::TVector2\l\< FVector::FReal \>::\lUE_DEPRECATED",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a5438616074542c152306910d12ecf054",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TVector2\l::ComponentwiseAllLessOrEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#aeee67ee48ba3d441933cfddbb6aa46bb",tooltip="Checks whether both components of this vector are less than or equal to another."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TVector2\l\< FVector::FReal \>::\lUE_DEPRECATED",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ad45441dd40a7f19c17f97315560a9fdc",tooltip=" "];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Math::TVector2\l::CrossProduct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#af8a22b8f8de7be231d58a9cbe788c0a7",tooltip="Calculate the cross product of two vectors."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TVector2\l::Distance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a2655a15298f98f19f318823925d31db0",tooltip="Distance between two 2D points."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TVector2\l::DistSquared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a281438354a91e91e8a60bae5d3473ab4",tooltip="Squared distance between two 2D points."];
  Node14 -> Node13 [id="edge14_Node000014_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node15 [id="edge15_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Geometry::TCircle2\l\< float \>::IsInsideOrOn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dec/structUE_1_1Geometry_1_1TCircle2.html#ad58866c6a5427da86dc5e0a62d8d945a",tooltip=" "];
  Node14 -> Node16 [id="edge16_Node000014_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Geometry::TTriangle2\l\< float \>::IsInsideOrOn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d6f/structUE_1_1Geometry_1_1TTriangle2.html#a312f746b60cf8f77c5782cfa198bd43c",tooltip=" "];
  Node14 -> Node17 [id="edge17_Node000014_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Geometry::TTriangle2\l\< float \>::IsInsideOrOn\l_Oriented",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d6f/structUE_1_1Geometry_1_1TTriangle2.html#ab8025f31b8a3b9b9fdadf83a88d746ae",tooltip=" "];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Math::TVector2::Dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a0caa97029c2c5ea0da4cdf4291b8b55c",tooltip="Get the dot product of this vector against another."];
  Node18 -> Node19 [id="edge19_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Geometry::AngleD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a2fe4146ed11160b4ac46fa63a0895961",tooltip=" "];
  Node19 -> Node20 [id="edge20_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Geometry::TPolygon2\l\< double \>::Chamfer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#ac36dea48df15e4bd04dd831ee78d9344",tooltip=" "];
  Node19 -> Node21 [id="edge21_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="UE::Geometry::FDynamicGraph2\l\< double \>::OpeningAngle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d56/classUE_1_1Geometry_1_1FDynamicGraph2.html#a08a1606c6dd0021eb4dd8a3933336240",tooltip=" "];
  Node19 -> Node22 [id="edge22_Node000019_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="UE::Geometry::VectorUtil\l::OpeningAngleD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#ad615d64a4004a150419fec3d996bceb2",tooltip=" "];
  Node19 -> Node23 [id="edge23_Node000019_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="UE::Geometry::TPolygon2\l\< double \>::OpeningAngleDeg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#ae7bc32f9f540b4f4fa7b144a71ba8251",tooltip=" "];
  Node19 -> Node24 [id="edge24_Node000019_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="UE::Geometry::VectorUtil\l::PlaneAngleSignedD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a47803304da6f40f39a2cab3293098bf8",tooltip="Calculates angle between VFrom and VTo after projection onto plane with normal defined by PlaneN."];
  Node24 -> Node25 [id="edge25_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="UE::Geometry::TFrame3\l\< float \>::ConstrainedAlignAxis",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d82/structUE_1_1Geometry_1_1TFrame3.html#a2aa34553021af7d4e3ff5879ff0b123b",tooltip=" "];
  Node18 -> Node26 [id="edge26_Node000018_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="UE::Geometry::AngleR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a1ec53c5618c4fda95d8bf3cc4b58357a",tooltip=" "];
  Node26 -> Node27 [id="edge27_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::Geometry::AsZeroToTwoPi",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#ae0eff329cb3cc3fbaf3297bc75f44d26",tooltip="return AngleR in [0,2pi) range."];
  Node26 -> Node28 [id="edge28_Node000026_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="UE::Geometry::VectorUtil\l::PlaneAngleSignedR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a7465b88088ad817bc7bef272241dd333",tooltip="Calculates angle between VFrom and VTo after projection onto plane with normal defined by PlaneN."];
  Node18 -> Node29 [id="edge29_Node000018_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Geometry::VectorUtil\l::BarycentricCoords",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a170a0553e84b406b6c00b0b4b1c49a90",tooltip="Compute barycentric coordinates/weights of vPoint inside 2D triangle (V0,V1,V2)."];
  Node18 -> Node30 [id="edge30_Node000018_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="UE::Geometry::TIntrTriangle2\lTriangle2\< float \>::ClipConvexPolygon\lAgainstLine",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/db8/classUE_1_1Geometry_1_1TIntrTriangle2Triangle2.html#a65f52184ddea40f6e2d38391d25edb14",tooltip=" "];
  Node18 -> Node31 [id="edge31_Node000018_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="UE::Geometry::TDistLine2\lAxisAlignedBox2\< float\l \>::DoQuery2D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6d/classUE_1_1Geometry_1_1TDistLine2AxisAlignedBox2.html#a45502c73d5eac9648f253b4aba63648c",tooltip=" "];
  Node18 -> Node32 [id="edge32_Node000018_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="UE::Geometry::TIntrSegment2\lTriangle2\< float \>::Find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dee/classUE_1_1Geometry_1_1TIntrSegment2Triangle2.html#a30f56fe5667e1e1d0f163da25be70e93",tooltip=" "];
  Node18 -> Node33 [id="edge33_Node000018_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="UE::Geometry::TIntrTriangle2\lTriangle2\< float \>::Find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/db8/classUE_1_1Geometry_1_1TIntrTriangle2Triangle2.html#a64988995a97f83bfd0e82903aaf23ee3",tooltip=" "];
  Node18 -> Node34 [id="edge34_Node000018_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="UE::Geometry::FArrangement2d\l::find_intersecting_edges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d8a/structUE_1_1Geometry_1_1FArrangement2d.html#ab4b2bfe791c0a99ee1cd50c185b7ee37",tooltip="find set of edges in graph that intersect with edge [A,B]"];
  Node34 -> Node35 [id="edge35_Node000034_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="UE::Geometry::FArrangement2d\l::insert_segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d8a/structUE_1_1Geometry_1_1FArrangement2d.html#a70b0efaac3352c17f9499fb3ccd5c6c9",tooltip="insert edge [A,B] into the arrangement, splitting existing edges as necessary"];
  Node35 -> Node36 [id="edge36_Node000035_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="UE::Geometry::FArrangement2d\l::Insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d8a/structUE_1_1Geometry_1_1FArrangement2d.html#a4668023ad498209be6f989f47243eb3c",tooltip="sequentially insert segments of polyline"];
  Node35 -> Node37 [id="edge37_Node000035_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="UE::Geometry::FArrangement2d\l::Insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d8a/structUE_1_1Geometry_1_1FArrangement2d.html#a9ca6084048952bfe87a42ba751a7836c",tooltip="insert segment into the arrangement"];
  Node35 -> Node38 [id="edge38_Node000035_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="UE::Geometry::FArrangement2d\l::Insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d8a/structUE_1_1Geometry_1_1FArrangement2d.html#a9762cd57f7a49713737fe0a83b102ec1",tooltip="insert segment [A,B] into the arrangement"];
  Node18 -> Node39 [id="edge39_Node000018_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="UE::Geometry::TIntrLine2\lTriangle2\< float \>::GetInterval",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d3e/classUE_1_1Geometry_1_1TIntrLine2Triangle2.html#ae43cb90eb1d3aae287a653131fde3f31",tooltip=" "];
  Node18 -> Node40 [id="edge40_Node000018_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="UE::Geometry::CurveUtil\l::ProjectPointInsideConvexPolygon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dd2/namespaceUE_1_1Geometry_1_1CurveUtil.html#a0911759025dbf1ca253c54a4fbbff71f",tooltip="Project point inside a convex polygon with known orientation."];
  Node18 -> Node41 [id="edge41_Node000018_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="UE::Geometry::SignedAngleR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a904a398163732fcc98400a8d3ed7ff2b",tooltip=" "];
  Node41 -> Node42 [id="edge42_Node000041_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="UE::Geometry::CurveUtil\l::IsConvex2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dd2/namespaceUE_1_1Geometry_1_1CurveUtil.html#a6805ab43ad5b660d37a18cdeb77c3215",tooltip="Tests closed, 2D curve for convexity, with an optional tolerance allowing for approximately-collinear..."];
  Node42 -> Node43 [id="edge43_Node000042_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="UE::Geometry::TPolygon2\l\< double \>::IsConvex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#a07ea5b619290ea839453f19e2a5ddc2c",tooltip=" "];
  Node1 -> Node44 [id="edge44_Node000001_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="UE::Math::TVector2\l::DotProduct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a715b99399874d5a31bb4d2b358951ccd",tooltip="Calculates the dot product of two vectors."];
  Node1 -> Node45 [id="edge45_Node000001_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="UE::Math::TVector2\l::Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a93feeeee63111382643c9359eceb83de",tooltip="Checks for equality with error-tolerant comparison."];
  Node1 -> Node46 [id="edge46_Node000001_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="UE::Math::TVector2\l::GetAbs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#af9e6a4fb9002cd76a03e702e946af6c3",tooltip="Get a copy of this vector with absolute value of each component."];
  Node46 -> Node47 [id="edge47_Node000046_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="UE::Geometry::TOrientedBox2\l\< float \>::DistanceSquared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/db8/structUE_1_1Geometry_1_1TOrientedBox2.html#a9ffa1adbd6d9f8e09f1c6cd6e7bf79d3",tooltip=" "];
  Node1 -> Node48 [id="edge48_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="UE::Math::TVector2\l::GetClampedToMaxSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a011c6bed8e77e9b474f011035ffa336c",tooltip="Create a copy of this vector, with its maximum magnitude clamped to MaxSize."];
  Node1 -> Node49 [id="edge49_Node000001_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="UE::Math::TVector2\l::GetClampedToSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ad25850afdf13fe433774d1992495c83d",tooltip="Create a copy of this vector, with its magnitude clamped between Min and Max."];
  Node1 -> Node50 [id="edge50_Node000001_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="UE::Math::TVector2\l::GetRotated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#aed1be2b5d06e4245ef860ab7aec187eb",tooltip="Rotates around axis (0,0,1)"];
  Node1 -> Node51 [id="edge51_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="UE::Math::TVector2\l::GetSafeNormal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#aade06016d38f61f0047920ca4164b770",tooltip="Gets a normalized copy of the vector, checking it is safe to do so based on the length."];
  Node1 -> Node52 [id="edge52_Node000001_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="UE::Math::TVector2\l::GetSignVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a10973623333ab8f0e1351d745926b009",tooltip="Get a copy of the vector as sign only."];
  Node1 -> Node53 [id="edge53_Node000001_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="UE::Math::TVector2::Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a1840295dfee931870703f4931415dc38",tooltip="Returns a vector with the maximum component for each dimension from the pair of vectors."];
  Node53 -> Node49 [id="edge54_Node000053_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node54 [id="edge55_Node000001_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="UE::Math::TVector2::Min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a11fa8bd64c25bba85ef434b93f26df1b",tooltip="Returns a vector with the minimum component for each dimension from the pair of vectors."];
  Node54 -> Node49 [id="edge56_Node000054_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node55 [id="edge57_Node000001_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="UE::Math::TVector2\l::operator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a56dde32ee2d2db72cbfc7ee7bcca893f",tooltip="Compares this vector against another for inequality."];
  Node1 -> Node56 [id="edge58_Node000001_Node000056",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="UE::Math::TVector2\l::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a19f4a39f1af0c72f55b41de61cb52fd8",tooltip="Gets the result of component-wise multiplication of this vector by another."];
  Node1 -> Node57 [id="edge59_Node000001_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="UE::Math::TVector2\l::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a667b0ec102dfe4c067afd93fda54acca",tooltip="Gets the result of scaling the vector (multiplying each component by a value)."];
  Node1 -> Node58 [id="edge60_Node000001_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="UE::Math::TVector2\l::operator*=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ac3350b9404f3fa671ad6634c94091877",tooltip="Multiplies this vector with another vector, using component-wise multiplication."];
  Node1 -> Node59 [id="edge61_Node000001_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="UE::Math::TVector2\l::operator*=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a94aa813a6b3ebfe8eadf762a460e3a2a",tooltip="Scales this vector."];
  Node1 -> Node60 [id="edge62_Node000001_Node000060",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="UE::Math::TVector2\l::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a181985a518bccbade8f371e68ad10ae9",tooltip="Gets the result of adding two vectors together."];
  Node1 -> Node61 [id="edge63_Node000001_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="UE::Math::TVector2\l::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a5900ec5d2de1bdc6c9f8132b6694a618",tooltip="Gets the result of adding A to each component of the vector."];
  Node1 -> Node62 [id="edge64_Node000001_Node000062",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="UE::Math::TVector2\l::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a1e10d08b90271ca23364c9ab1669aec5",tooltip="Adds another vector to this."];
  Node1 -> Node63 [id="edge65_Node000001_Node000063",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="UE::Math::TVector2\l::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a81f03dd35d16c294b1663ce40fec38e8",tooltip="Gets a negated copy of the vector."];
  Node1 -> Node64 [id="edge66_Node000001_Node000064",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="UE::Math::TVector2\l::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a6d2f037e68045c6757b039bedea2b09a",tooltip="Gets the result of subtracting a vector from this one."];
  Node1 -> Node65 [id="edge67_Node000001_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="UE::Math::TVector2\l::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a9ce6c9a0223fae8e7313d09972f17e3d",tooltip="Gets the result of subtracting A from each component of the vector."];
  Node1 -> Node66 [id="edge68_Node000001_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="UE::Math::TVector2\l::operator-=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ab0201210c9f0275ae8748b746c2562ea",tooltip="Subtracts another vector from this."];
  Node1 -> Node67 [id="edge69_Node000001_Node000067",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="UE::Math::TVector2\l::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#af97699cbd30d8de130ea15ee0abcfc71",tooltip="Gets the result of component-wise division of this vector by another."];
  Node1 -> Node68 [id="edge70_Node000001_Node000068",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="UE::Math::TVector2\l::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a658864cc4fddd1cb7cdf276d73476719",tooltip="Gets the result of dividing each component of the vector by a value."];
  Node1 -> Node69 [id="edge71_Node000001_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="UE::Math::TVector2\l::operator/=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a37d501f89c9a856ee9fbbb5e1023da6c",tooltip="Divides this vector by another vector, using component-wise division."];
  Node1 -> Node70 [id="edge72_Node000001_Node000070",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="UE::Math::TVector2\l::operator/=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#adadf0186ab47d24daf0f27e332d1bc2d",tooltip="Divides this vector."];
  Node1 -> Node71 [id="edge73_Node000001_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="UE::Math::TVector2\l::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#afcc10d5a1b18c4ebf8f045b6bc25fd4c",tooltip="Compares this vector against another for equality."];
  Node1 -> Node72 [id="edge74_Node000001_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 [id="Node000072",label="UE::Math::TVector2\l::operator^",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#ac5a520c0ec44b338861364ef8d3b667e",tooltip="Calculates cross product of this vector and another."];
  Node1 -> Node73 [id="edge75_Node000001_Node000073",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="UE::Math::TVector2\l::operator\|",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a3a347dd34236fc7535967008c1324f7f",tooltip="Calculates dot product of this vector and another."];
  Node1 -> Node74 [id="edge76_Node000001_Node000074",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node74 [id="Node000074",label="UE::Math::TVector2\l::RoundToVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a3cb9386b990f3226c54d7e8f0c101e31",tooltip="Get this vector as a vector where each component has been rounded to the nearest int."];
  Node1 -> Node75 [id="edge77_Node000001_Node000075",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node75 [id="Node000075",label="UE::Math::TVector2\l::ToDirectionAndLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a64978576c1f642ed2f37f308b85c5493",tooltip="Util to convert this vector into a unit direction vector and its original length."];
  Node75 -> Node76 [id="edge78_Node000075_Node000076",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node76 [id="Node000076",label="UE::Math::TVector2\l\< FVector::FReal \>::\lToDirectionAndLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#abe26404d134a7845288ba81c9f87f430",tooltip=" "];
  Node1 -> Node77 [id="edge79_Node000001_Node000077",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="UE::Math::TVector2\l\< FVector::FReal \>::UnitX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a10494fa81b4393ff09052bf877eeb395",tooltip=" "];
  Node1 -> Node78 [id="edge80_Node000001_Node000078",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="UE::Math::TVector2\l\< FVector::FReal \>::UnitY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d80/structUE_1_1Math_1_1TVector2.html#a1b20a8f22cd286a7047c108cacd29716",tooltip=" "];
}
