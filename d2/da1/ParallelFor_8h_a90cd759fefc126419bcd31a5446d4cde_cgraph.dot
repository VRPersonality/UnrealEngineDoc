digraph "ENUM_CLASS_FLAGS"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ENUM_CLASS_FLAGS",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TaskTrace::Completed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcb/namespaceTaskTrace.html#afd1a28a1e696e22a39947f16dad7c7a1",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TaskTrace::Destroyed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcb/namespaceTaskTrace.html#a206beda3b790edde46093cf5730c804e",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FMath::DivideAndRoundUp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#ae928a1450f7427dabf9ee2bec4677742",tooltip="Divides two integers and rounds up."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FTimespan::FromMilliseconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d12/structFTimespan.html#aeffda0245179d4e432bfb594489d87b9",tooltip="Create a time span that represents the specified number of milliseconds."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FTimespan::FTimespan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d12/structFTimespan.html#aca97170059e97d76b01788f7103fba7a",tooltip="Default constructor (zero initialization)."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FTimespan::FromSeconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d12/structFTimespan.html#adbd771dd30660c80d49a60b4f92baac4",tooltip="Create a time span that represents the specified number of seconds."];
  Node7 -> Node6 [id="edge7_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TaskTrace::GenerateTaskId",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcb/namespaceTaskTrace.html#a55b32ed79e32a12c2130b80ae015031c",tooltip=" "];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FTaskGraphInterface::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d19/classFTaskGraphInterface.html#abfd26b251bea43c5077b6b7adcc459be",tooltip="Singleton for the system."];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="LowLevelTasks::FScheduler::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/dd0/classLowLevelTasks_1_1FScheduler.html#a53651e891425200d0d5b150e5ea5cd0c",tooltip=" "];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="LowLevelTasks::FScheduler\l::FScheduler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/dd0/classLowLevelTasks_1_1FScheduler.html#a5de33ac0315d13706d2ba3ffcf47e9d3",tooltip=" "];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="FTaskTagScope::GetCurrentTag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d8d/classFTaskTagScope.html#adbbeb1eb401ba77d26e15a8283b224f8",tooltip=" "];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddf/StringConv_8h.html#a4111b73e6a9d7101173e7223118962f3",tooltip=" "];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="ENamedThreads::GetRender\lThread_Local",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d7c/namespaceENamedThreads.html#a4e1992e463aa5fd88e16925c68342df8",tooltip=" "];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="TArrayView::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d13/classTArrayView.html#a4ff5dbedc5bb83d06568b18e474d6d9a",tooltip="Returns true if the array view is empty and contains no elements."];
  Node1 -> Node16 [id="edge16_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FForkProcessHelper\l::IsForkedMultithreadInstance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d99/classFForkProcessHelper.html#abeb108b4fc5c308c957b6a98317396de",tooltip="Are we a forked process that supports multithreading This only becomes true after its safe to be mult..."];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="IsInActualRenderingThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d8c/CoreGlobals_8h.html#aa07c104b2e43382ace98cf1e5bd32038",tooltip=" "];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="TaskTrace::Launched",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcb/namespaceTaskTrace.html#a05a6e2014b9b2d25ca97a6ecb1a1c030",tooltip=" "];
  Node1 -> Node19 [id="edge19_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="FTimespan::MinValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d12/structFTimespan.html#a567a22878b3f4325294e6602ac999d66",tooltip="Return the minimum time span value."];
  Node19 -> Node6 [id="edge20_Node000019_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge21_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
  Node1 -> Node21 [id="edge22_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="TArrayView::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d13/classTArrayView.html#ae5b1658ae1312e54b0d669664cbf88ed",tooltip="Returns number of elements in array."];
  Node1 -> Node22 [id="edge23_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="FAndroidMisc::NumberOfCores\lIncludingHyperthreads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d8b/structFAndroidMisc.html#ada9631fd66aa2e52d63c8115e37f20ac",tooltip=" "];
  Node1 -> Node23 [id="edge24_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="ParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/da1/ParallelFor_8h.html#a68b625089b9c041b662a1605dbef98f0",tooltip="General purpose parallel for that uses the taskgraph."];
  Node1 -> Node24 [id="edge25_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="FTaskGraphInterface\l::ProcessThreadUntilIdle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d19/classFTaskGraphInterface.html#ae7e0f387e455c6a7c9686fa30a118365",tooltip="Requests that a named thread, which must be this thread, run until idle, then return."];
  Node1 -> Node25 [id="edge26_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="UE::FInheritedContextBase\l::RestoreInheritedContext",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d16/classUE_1_1FInheritedContextBase.html#a2e7f2280ea5c42a8a09965cdbdaa90c2",tooltip=" "];
  Node1 -> Node26 [id="edge27_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="FAndroidTime::Seconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d27/structFAndroidTime.html#ad64caf5a4cf7be5a98034240d951a54e",tooltip=" "];
  Node1 -> Node27 [id="edge28_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="FApp::ShouldUseThreading\lForPerformance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d01/classFApp.html#af4aeac283053e910185060aeae88332e",tooltip="Checks whether the application should run multi-threaded for performance critical features."];
  Node1 -> Node28 [id="edge29_Node000001_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="TaskTrace::Started",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcb/namespaceTaskTrace.html#a00ab46907c40fbf51fa314e117e463cf",tooltip=" "];
  Node1 -> Node29 [id="edge30_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="LowLevelTasks::TryLaunch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d11/namespaceLowLevelTasks.html#a183184a359a2218797e03cbba90b3662",tooltip=" "];
  Node29 -> Node10 [id="edge31_Node000029_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node30 [id="edge32_Node000029_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="LowLevelTasks::FScheduler\l::TryLaunch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/dd0/classLowLevelTasks_1_1FScheduler.html#a5b07835767cfa17fa5b293c04fc22098",tooltip=" "];
  Node1 -> Node31 [id="edge33_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="FEvent::Wait",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d86/classFEvent.html#a0ed6c3edf36b18c820ff50cc5ebf2728",tooltip="Waits the specified amount of time for the event to be triggered."];
  Node31 -> Node31 [id="edge34_Node000031_Node000031",color="steelblue1",style="solid",tooltip=" "];
}
