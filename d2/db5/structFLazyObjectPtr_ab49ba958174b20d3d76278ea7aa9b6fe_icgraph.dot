digraph "FLazyObjectPtr::operator="
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FLazyObjectPtr::operator=",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Copy from an object already in memory."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TLazyObjectPtr::TLazyObjectPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d73/structTLazyObjectPtr.html#ada5fb10da189c42ddf2f5ca7642e5f13",tooltip="Construct from an object pointer."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TLazyObjectPtr::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d73/structTLazyObjectPtr.html#a26df51bba7fc4f2ac8d266e212bcf5d4",tooltip="Copy from a unique object identifier WARNING: this doesn't check the type of the object is correct,..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TLazyObjectPtr::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d73/structTLazyObjectPtr.html#a9b0a8b84186ef64bef1e2cf787b22fde",tooltip="Assign from another lazy pointer with implicit upcasting allowed."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TLazyObjectPtr::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d73/structTLazyObjectPtr.html#a752592579deb5271e8d74c4de2f2ffeb",tooltip="Copy from an object pointer."];
}
