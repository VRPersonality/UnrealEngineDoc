digraph "FComputeShaderUtils::GetGroupCountWrapped"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FComputeShaderUtils\l::GetGroupCountWrapped",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute the number of groups to dispatch and allow wrapping to Y and Z dimension if X group count ove..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FMath::DivideAndRoundUp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#ae928a1450f7427dabf9ee2bec4677742",tooltip="Divides two integers and rounds up."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FComputeShaderUtils\l::GetGroupCountWrapped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d0e/namespaceFComputeShaderUtils.html#a6b1a248c53cbe4ce65dfa784d8fed082",tooltip="Wrapping number of groups to Y and Z dimension if X group count overflows GRHIMaxDispatchThreadGroups..."];
  Node3 -> Node2 [id="edge3_Node000003_Node000002",color="steelblue1",style="solid",tooltip=" "];
}
