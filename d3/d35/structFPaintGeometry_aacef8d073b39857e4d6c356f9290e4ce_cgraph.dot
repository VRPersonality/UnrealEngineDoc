digraph "FPaintGeometry::CommitTransformsIfUsingLegacyConstructor"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FPaintGeometry::CommitTransforms\lIfUsingLegacyConstructor",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Support mutable geometries constructed in window space, and possibly mutated later,..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Inverse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9f/TransformCalculus_8h.html#a29156a093f8a383d33b1777e57754d23",tooltip="Inverts a transform from space A to space B so it transforms from space B to space A."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TransformVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9f/TransformCalculus_8h.html#a667730e0e0989c4417a3d9523ebe7a7f",tooltip="Generic implementation of TransformVector."];
}
