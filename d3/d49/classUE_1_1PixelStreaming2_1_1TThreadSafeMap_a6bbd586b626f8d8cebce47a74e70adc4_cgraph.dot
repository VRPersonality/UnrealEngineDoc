digraph "UE::PixelStreaming2::TThreadSafeMap::operator="
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::PixelStreaming2\l::TThreadSafeMap::operator=",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Assignment operator for copying elements from a TThreadSafeMap with a different SetAllocator."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::PixelStreaming2\l::TThreadSafeMap::TThreadSafeMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d49/classUE_1_1PixelStreaming2_1_1TThreadSafeMap.html#a08fc47cda23256b852ab2544110ce0e7",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TSet::Empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d15/classTSet.html#aeeb04e7e80f46d5709c4de9fa380e4e7",tooltip="Removes all elements from the set, potentially leaving space allocated for an expected number of elem..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
}
