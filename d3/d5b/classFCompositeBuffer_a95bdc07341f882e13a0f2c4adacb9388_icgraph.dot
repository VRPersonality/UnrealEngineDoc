digraph "FCompositeBuffer::FCompositeBuffer"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FCompositeBuffer::FComposite\lBuffer",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Construct a composite buffer by concatenating the buffers."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FCompositeBuffer::Append\lBuffers",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a28d66f1a9c7f5fac02d592de7e361a95",tooltip=" "];
  Node2 -> Node1 [id="edge2_Node000002_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FCompositeBuffer::Append\lBuffers",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a5f0edb98606538b411a1b3b8c8030668",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FCompositeBuffer::EqualBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a7851e3e09db07245cd326df262ca962c",tooltip="Returns true if the bytes of this buffer are equal to the bytes of the other buffer."];
  Node4 -> Node4 [id="edge5_Node000004_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge6_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FCompositeBuffer::GetBuffer\lCount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a50a263151779b90c6df329dcb9c3bc96",tooltip=" "];
  Node5 -> Node1 [id="edge7_Node000005_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node5 [id="edge8_Node000005_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge9_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FCompositeBuffer::MakeOwned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a1afed62b3fb6e454ae7d1f2da8708a3a",tooltip=" "];
  Node1 -> Node7 [id="edge10_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FCompositeBuffer::MakeOwned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#ac3c0cc4bf1af86a399612a31c20fdb71",tooltip="Returns a copy of the buffer where every segment is owned."];
  Node7 -> Node6 [id="edge11_Node000007_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge12_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FCompositeBuffer::Mid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d5b/classFCompositeBuffer.html#a2c7943b9cb8be54d451af843da1cb7e8",tooltip="Returns the middle part of the buffer by taking the size starting at the offset."];
  Node8 -> Node8 [id="edge13_Node000008_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
