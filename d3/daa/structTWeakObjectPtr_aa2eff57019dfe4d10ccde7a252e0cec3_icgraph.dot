digraph "TWeakObjectPtr::IsValid"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TWeakObjectPtr::IsValid",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Test if this points to a live UObject."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FGuardSkipDirtyBlueprint\lStatus::FGuardSkipDirtyBlueprint\lStatus",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d22/structFGuardSkipDirtyBlueprintStatus.html#abcdf2c087738e6147f6abf2b0137b709",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="IDetailLayoutBuilder\l::GetObjectsOfTypeBeingCustomized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/de5/classIDetailLayoutBuilder.html#a746c8686c04f0f1ce4d31783f6d3c68d",tooltip="Gets the current object(s) being customized by this builder of ObjectType."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="IDetailLayoutBuilder\l::GetSelectedObjectsOfType",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/de5/classIDetailLayoutBuilder.html#a4f99a4feb15f5334ec6b59b7774be28c",tooltip="Get the root objects (of ObjectType) observed by this layout."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Anim::AttributeTypes\l::GetTypeOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0f/structUE_1_1Anim_1_1AttributeTypes.html#a0257e0183e4102b6d8869d22430cf385",tooltip="Returns the blend operator for the provided type, asserts when the type is not registered."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TListTypeTraits\< TWeakObject\lPtr\< T \> \>::IsPtrValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d2f/structTListTypeTraits_3_01TWeakObjectPtr_3_01T_01_4_01_4.html#addecf2f7ed240028a08b1be66f8b9c56",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="USTRUCT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d1a/EngineBaseTypes_8h.html#aaf32f2c0456558339cdc3f0fa54e449a",tooltip="Determines which ticking group a tick function belongs to."];
}
