digraph "TConstStructView::operator-&gt;"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TConstStructView::operator-\>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Simplified accessor for members of the guaranteed minimum structure type."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TConstStructView::GetPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/db1/structTConstStructView.html#afb2e89d146e7bbe0917a841c9180a53c",tooltip="Returns const pointer to the struct, or nullptr if cast is not valid."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::StructUtils::GetStructPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/db6/namespaceUE_1_1StructUtils.html#a5af2d1b22a49b2629be0a8626d4d7afb",tooltip="Returns pointer to the struct, or nullptr if cast is not valid."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TBaseStructureBase::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d61/structTBaseStructureBase.html#a0293c35703fa02b53edae7b546be5b75",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="IsValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d4c/LiveLinkTypes_8h.html#ac532c4b500b1a85ea22217f2c65a70ed",tooltip=" "];
}
