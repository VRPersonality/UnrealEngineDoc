digraph "TObjectPtr::operator=="
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TObjectPtr::operator==",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ObjectPtr_Private::\lIsObjectPtrEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de0/namespaceObjectPtr__Private.html#a1f3b4eb42bacc17a610867d9949d1f60",tooltip="Perform shallow equality check between a TObjectPtr and another (non TObjectPtr) type that we can coe..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ObjectPtr_Private::\lCoerceToPointer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de0/namespaceObjectPtr__Private.html#ab67ddd4e57f3453125531ddbe457422b",tooltip="Coerce to pointer through implicit conversion to const T* (overload through less specific \"const T*\" ..."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ObjectPtr_Private::\lIsObjectPtrEqualToRawPtrOf\lRelatedType",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de0/namespaceObjectPtr__Private.html#a779524baad498ef4fc770f67c20f59aa",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TObjectPtr::GetNoReadNoCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d0b/structTObjectPtr.html#a2928f929dcd1bbb47449316dab3c5d74",tooltip=" "];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::CoreUObject::Private\l::ResolveObjectHandleNoReadNoCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a18c4d0b8f8ffe60d4b750589d758d7c7",tooltip="Resolves an ObjectHandle without checking if already resolved."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="IsObjectHandleResolved\l_ForGC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d34/ObjectHandle_8h.html#a6bbeca8d1e9361ea5c9576864125ce90",tooltip=" "];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="IsObjectHandleTypeSafe",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d34/ObjectHandle_8h.html#a38f7811202ea40dd9b668b73bbe81e24",tooltip=" "];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::CoreUObject::Private\l::MakeObjectHandle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a6ee32c4b54fd56c5edcc7468e45f68eb",tooltip="these functions are always defined regardless of UE_WITH_OBJECT_HANDLE_LATE_RESOLVE value"];
  Node6 -> Node10 [id="edge9_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::CoreUObject::Private\l::ReadObjectHandlePointerNoCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d98/namespaceUE_1_1CoreUObject_1_1Private.html#a05b42895ea5f93b9398be3e8cc061d3a",tooltip="Read the handle as a pointer without checking if it is resolved."];
  Node6 -> Node11 [id="edge10_Node000006_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::RemoteObject::Handle\l::ResolveObject",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d24/namespaceUE_1_1RemoteObject_1_1Handle.html#a63794e32c2ed473268264abdb5398d3a",tooltip="Resolves a remote object given its stub, aborting the active transaction if the object is unavailable..."];
  Node4 -> Node12 [id="edge11_Node000004_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TObjectPtr::GetNoResolve\lNoCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d0b/structTObjectPtr.html#a2058ee36793c5adeff78a14024e0e9c1",tooltip=" "];
  Node12 -> Node10 [id="edge12_Node000012_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node13 [id="edge13_Node000004_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TObjectPtr::IsResolved",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d0b/structTObjectPtr.html#a05072c9f9849aff0f653a788fcfc0d4a",tooltip=" "];
}
