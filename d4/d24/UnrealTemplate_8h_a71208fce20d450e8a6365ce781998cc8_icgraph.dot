digraph "Exchange"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="Exchange",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TOctree_DEPRECATED\l::AddElementToNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dfb/classTOctree__DEPRECATED.html#abd2d9475a8392920066214535c864fdc",tooltip="Adds an element to a node or its children."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TOctree_DEPRECATED\l::AddElement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dfb/classTOctree__DEPRECATED.html#aff4c7ca514bdb263de836a92f03f492b",tooltip="Adds an element to the octree."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TOctree_DEPRECATED\l::ApplyOffset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/dfb/classTOctree__DEPRECATED.html#a9ca49ee8586fe4a12910c93213d646a3",tooltip="Apply an arbitrary offset to all elements in the tree InOffset - offset to apply bGlobalOctree - hint..."];
  Node2 -> Node2 [id="edge4_Node000002_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge5_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TSparseArray\< SetElement\lType, typename Allocator\l::SparseArrayAllocator \>\l::CompactStable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/db8/classTSparseArray.html#adf0d4dec7c3f816cfc427cabfa4f5f59",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FTriangleRasterizer\l::DrawTriangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc9/classFTriangleRasterizer.html#a282d4b8c35744104127ae9bedf452934",tooltip=" "];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FTriangleRasterizer\l::DrawTriangleTrapezoid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc9/classFTriangleRasterizer.html#aca69445d874be65ebe4e494881098340",tooltip=" "];
  Node7 -> Node6 [id="edge8_Node000007_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FPoly::GetOutsideWindings",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dbb/classFPoly.html#a1cfcd08899aa2d7f6f84685714e8beb1",tooltip="Takes a set of polygons and returns a vertex array representing the outside winding for them."];
  Node1 -> Node9 [id="edge10_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FWindowsPlatformAtomics\l::InterlockedCompareExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#afa8ee89c1771aceb8738593288338428",tooltip=" "];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FWindowsPlatformAtomics\l::InterlockedCompareExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#aa6413528d6d1c2b825f56ae18a9c6457",tooltip=" "];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="FWindowsPlatformAtomics\l::InterlockedCompareExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#a994c90a467002c83c673fe9cf5c0a944",tooltip=" "];
  Node1 -> Node12 [id="edge13_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="FWindowsPlatformAtomics\l::InterlockedCompareExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#a8c398382712abb8568b61766851b8194",tooltip=" "];
  Node1 -> Node13 [id="edge14_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FWindowsPlatformAtomics\l::InterlockedCompareExchange\lPointer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#a33d83c4545fda2d0ba7a1237481e7541",tooltip="The function compares the Destination value with the Comparand value:"];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FWindowsPlatformAtomics\l::InterlockedExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#ac6308ff192533e4a09590b6a54ece2a9",tooltip=" "];
  Node1 -> Node15 [id="edge16_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="FWindowsPlatformAtomics\l::InterlockedExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#a02a7b6ac7bba3970dc932d9d528cd537",tooltip=" "];
  Node1 -> Node16 [id="edge17_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FWindowsPlatformAtomics\l::InterlockedExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#a633f19572db91c2a75b048e7d454c926",tooltip=" "];
  Node1 -> Node17 [id="edge18_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="FWindowsPlatformAtomics\l::InterlockedExchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#ae4169d43161d80f23cafd3b20b6271b4",tooltip=" "];
  Node1 -> Node18 [id="edge19_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="FWindowsPlatformAtomics\l::InterlockedExchangePtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d6e/structFWindowsPlatformAtomics.html#afcaeffcf1d869469e9c891191d44f8ea",tooltip=" "];
  Node1 -> Node19 [id="edge20_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="MS_ALIGN",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/de7/LockFreeList_8h.html#a2060f12288010a68d176ede69d6d5886",tooltip=" "];
  Node1 -> Node20 [id="edge21_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="TAtomic::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/ddb/classTAtomic.html#a574aa9c8f931ef5d0cd1e7ca9316791b",tooltip="Sets the element to a specific value, returning a copy of the value."];
  Node1 -> Node21 [id="edge22_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Algo::Partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d33/namespaceAlgo.html#a7b1c19c33d5782668916b7dbf304b3f9",tooltip="Rearranges the elements so that all the elements for which Predicate returns true precede all those f..."];
  Node21 -> Node22 [id="edge23_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Algo::Partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d33/namespaceAlgo.html#a1e3aee27a325528bae15bea16e009006",tooltip="Rearranges the elements so that all the elements for which Predicate returns true precede all those f..."];
  Node1 -> Node23 [id="edge24_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="TJugglingRotation::\lRotate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d01/classTJugglingRotation.html#a3eeded33df6283316f7facada7e19253",tooltip="Rotates array."];
  Node1 -> Node24 [id="edge25_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="TMergeSort::Sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d61/classTMergeSort.html#ac490f5df2b2e7a459da2b299cab14479",tooltip="Sort the array."];
  Node1 -> Node25 [id="edge26_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="FTransaction::FObjectRecord\l::FSerializedObject::Swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d12/structFTransaction_1_1FObjectRecord_1_1FSerializedObject.html#a954d6d0dcb4e1d6d535bbee6fc5bbef5",tooltip=" "];
  Node1 -> Node26 [id="edge27_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="FTransactionObjectId\l::Swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d88/structFTransactionObjectId.html#ae2c9cdab1331b8ff568737b22cc2c2a8",tooltip=" "];
  Node26 -> Node27 [id="edge28_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::Transaction::FSerialized\lObjectInfo::Swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dcd/structUE_1_1Transaction_1_1FSerializedObjectInfo.html#a0b65163c6a917ea893d387e6306508e3",tooltip=" "];
  Node1 -> Node28 [id="edge29_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="UE::Transaction::FDiffable\lObject::Swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d26/structUE_1_1Transaction_1_1FDiffableObject.html#a7dd10a4be664a68d1cb34513e75025ab",tooltip=" "];
  Node1 -> Node29 [id="edge30_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Transaction::FSerialized\lObject::Swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/db9/structUE_1_1Transaction_1_1FSerializedObject.html#ae9bc5ea47b9acdef77a9c677dbf4e53f",tooltip=" "];
  Node29 -> Node25 [id="edge31_Node000029_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge32_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge33_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="UE_DEPRECATED",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d75/ObjectPtr_8h.html#a09c5b210ba377e1f3a300e0397465e48",tooltip="Exchange variants between TArray<TObjectPtr<T>> and TArray<T*>"];
}
