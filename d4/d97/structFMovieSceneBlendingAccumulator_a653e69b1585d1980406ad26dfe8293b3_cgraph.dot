digraph "FMovieSceneBlendingAccumulator::BlendToken"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FMovieSceneBlendingAccumulator\l::BlendToken",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Add a token that will be blended together with other tokens of the same type and actuator this frame,..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FMovieSceneBlendingAccumulator\l::FindActuator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d97/structFMovieSceneBlendingAccumulator.html#aab952fb95e6666f63599d9eff75ddfbb",tooltip="Find an existing actuator with the specified ID that operates on a specific data type."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TSharedRef::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df2/classTSharedRef.html#a69b7bd60134fb963c15d4beb2478f126",tooltip="Returns a C++ reference to the object this shared reference is referencing."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="GetBlendingDataType",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d3e/BlendableTokenStack_8h.html#a098d8eea3823b16d7481acd6f20c3730",tooltip="Template to access the type ID for a given blendable data type Care should be taken to ensure that on..."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FMovieSceneAnimTypeID\l::Unique",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d4b/structFMovieSceneAnimTypeID.html#aa2c58a869d039bc2368def3f326051c6",tooltip=" "];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FMovieSceneAnimTypeID\l::FMovieSceneAnimTypeID",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d4b/structFMovieSceneAnimTypeID.html#a84287900e7f68fd555acdc6ce520c053",tooltip=" "];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FMovieSceneAnimTypeID\l::Initialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d4b/structFMovieSceneAnimTypeID.html#a1f3f798fe3a382d6d3235cfe700eea8a",tooltip="Initialize this structure by storing the hash result in the static ptr itself This ensures subsequent..."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FMovieSceneContext\l::GetHierarchicalBias",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/daf/structFMovieSceneContext.html#a2b3dd37c0ec4a363abf159dc4a6b8112",tooltip="Get the hierarchical bias for the current context."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
}
