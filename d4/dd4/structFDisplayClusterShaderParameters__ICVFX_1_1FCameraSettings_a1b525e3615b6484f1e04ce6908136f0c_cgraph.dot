digraph "FDisplayClusterShaderParameters_ICVFX::FCameraSettings::SetViewProjection"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FDisplayClusterShaderParameters\l_ICVFX::FCameraSettings::SetViewProjection",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TTransform\l::InverseTransformPosition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a4cb67cafc9c6fe002eac43f9dfc198c3",tooltip="Inverts the transform and then transforms V - correctly handles scaling in this transform."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Math::TTransform\l::DiagnosticCheckNaN_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#aa084e7b9cf8562aa93b41f704a6de991",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Math::TTransform\l::GetSafeScaleReciprocal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a10e2cf4be0eb2b4853360f878c4fde91",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TTransform\l::InverseTransformRotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a4c792908adb52923b09935145cfa8206",tooltip="Inverse transform a rotation."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TTransform\l::GetRotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#ac86e07a6d70cac1a63fad6a4c8ce5fb5",tooltip="Returns the rotation component."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TRotator\l::Quaternion",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#afef6171a79e1a96252f9327329bb39f4",tooltip="Get Rotation as a quaternion."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TQuat::Rotator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a10c13296054508ca65fb7d4cd46a8330",tooltip="Get the TRotator<T> representation of this Quaternion."];
}
