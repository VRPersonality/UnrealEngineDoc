digraph "FCurveEditorScreenSpace::ToCurveSpace"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FCurveEditorScreenSpace\l::ToCurveSpace",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Transform this screen space into a curve space using the specified transform."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FCurveEditorScreenSpace\l::FCurveEditorScreenSpace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d47/structFCurveEditorScreenSpace.html#ad3a319c2da7fd382796d3296e0be1537",tooltip="Construction from a physical size, and input/output range."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FCurveEditorScreenSpaceH\l::FCurveEditorScreenSpaceH",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d2d/structFCurveEditorScreenSpaceH.html#aa003e3a279d01456c0b9f5da41026291",tooltip="Construction from a physical size, and input/output range."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FCurveEditorScreenSpaceV\l::FCurveEditorScreenSpaceV",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d27/structFCurveEditorScreenSpaceV.html#a8fae86068eb34a1b0703b74910deb4de",tooltip="Construction from a physical size, and input/output range."];
  Node1 -> Node3 [id="edge4_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge5_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge6_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="New",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/de0/MemStack_8h.html#a46518131691efca99c1054a2e51e01fe",tooltip=" "];
  Node5 -> Node6 [id="edge7_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Align",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d32/AlignmentTemplates_8h.html#a3483acf381a22a4696a25ac42b2f3d4c",tooltip="Aligns a value to the nearest higher multiple of 'Alignment', which must be a power of two."];
  Node5 -> Node7 [id="edge8_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FMemStackBase::PushBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df6/classFMemStackBase.html#ad742689d2cb2c4e1c5ba58afbc93e90f",tooltip=" "];
  Node7 -> Node8 [id="edge9_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FMemStackBase::Alloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df6/classFMemStackBase.html#a045068f2960722fd357d198fe70103ce",tooltip=" "];
  Node8 -> Node9 [id="edge10_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FMemStackBase::AllocateNew\lChunk",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df6/classFMemStackBase.html#a6c85c9d4fad0ea113a2a510fe559d18c",tooltip="Allocate a new chunk of memory of at least MinSize size, updates the memory stack's Chunks table and ..."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FCurveEditorScreenSpaceH\l::ToCurveSpace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d2d/structFCurveEditorScreenSpaceH.html#af862f0edf9aeedfd9791c1942687f670",tooltip="Transform this screen space into a curve space using the specified transform."];
  Node10 -> Node3 [id="edge12_Node000010_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node11 [id="edge13_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TMatrix2x2::GetMatrix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d04/classTMatrix2x2.html#a17ab0b114b8cbc53f02cbb8919a105bd",tooltip=" "];
  Node10 -> Node12 [id="edge14_Node000010_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TTransform2::GetMatrix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d43/classTTransform2.html#aad949355e128716d304e670923b95a15",tooltip="Access to the 2x2 transform."];
  Node10 -> Node13 [id="edge15_Node000010_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TTransform2::GetTranslation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d43/classTTransform2.html#a6218fde2a96fde2bf474bd370b14a3c8",tooltip="Access to the translation."];
  Node1 -> Node14 [id="edge16_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FCurveEditorScreenSpaceV\l::ToCurveSpace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d27/structFCurveEditorScreenSpaceV.html#a6e70b7ba2c9136b447bc472c0abb2793",tooltip="Transform this screen space into a curve space using the specified transform."];
  Node14 -> Node4 [id="edge17_Node000014_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node11 [id="edge18_Node000014_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node12 [id="edge19_Node000014_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node13 [id="edge20_Node000014_Node000013",color="steelblue1",style="solid",tooltip=" "];
}
