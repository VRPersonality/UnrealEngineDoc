digraph "TAddKeyImpl&lt; FMovieSceneDoubleChannel, double &gt;::Apply"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TAddKeyImpl\< FMovieScene\lDoubleChannel, double\l \>::Apply",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="AddKeyToChannel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d7d/MovieSceneDoubleChannel_8h.html#abfb9f652fc09d85e8abc68d38a638df2",tooltip="Overload for adding a new key to a double channel at a given time."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FMovieSceneChannelProxy\l::GetChannel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d5f/structFMovieSceneChannelProxy.html#a7dba76bacb2eb55741df0d8b0038cbca",tooltip="Get the channel for the specified index of a particular type."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FMovieSceneChannelProxy\l::GetChannels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d5f/structFMovieSceneChannelProxy.html#a8d93e82a1bf860d9ba2a307fe9a2fc4b",tooltip="Get all channels of the specified type."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FMovieSceneChannelProxy\l::FindEntry",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d5f/structFMovieSceneChannelProxy.html#ae75458a0571c684c93f78988a738ad51",tooltip="Find an entry by its channel type name."];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TArray::GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a5b7af561ae2c8731aca5c33c736fb4f2",tooltip="Helper function for returning a typed pointer to the first array entry."];
  Node4 -> Node7 [id="edge6_Node000004_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TArray::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#adcbf9ca48677a9c0c3830cd862dd40d8",tooltip="Returns number of elements in array."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="GetInterpolationMode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d7d/MovieSceneDoubleChannel_8h.html#a2dfbe2541ecc53d7159d1b540b59f7f0",tooltip="Overload for getting the interpolation mode for a channel at a specified time, it could be the previo..."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="ValueExistsAtTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d7d/MovieSceneDoubleChannel_8h.html#a9a79fe5a710d54be304c673b3e3a0ed5",tooltip="Overloads for common utility functions."];
}
