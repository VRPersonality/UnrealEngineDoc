digraph "UE::FTimeout::WillNeverExpire"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::FTimeout::WillNeverExpire",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Returns true if this was created from Never and does not need to be repeatedly checked."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::FTimeout::GetRemaining\lRoundedUpMilliseconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#a8e1b9a0f459fc6515c10be996cbd9570",tooltip="Intended for use in waiting functions, e.g."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::FTimeout::GetRemaining\lSeconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#a930d9fd136a0576c15946dc75ad5215b",tooltip="Returns time left until the timeout expires (which can be negative) in seconds."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::FTimeout::GetRemainingTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#abf2af7d33cd432ed84869185fa6e2e34",tooltip="Returns time left until the timeout expires (which can be negative) as a timespan."];
  Node4 -> Node2 [id="edge4_Node000004_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge5_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge6_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::FTimeout::GetTimeout\lValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#a0a168fa068e539654ec1ce3ad355d740",tooltip="Returns duration of timeout as a timespan."];
  Node1 -> Node6 [id="edge7_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::FTimeout::IsExpired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#aee660b07e2c6ca6609a350e6534f421c",tooltip="Return true if elapsed time is greater than the initially requested timeout."];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::FTimeout::UE_DEPRECATED",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#a055eace6e777ad05a6a6a87c56d6a249",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::FTimeout::ModifyTimeout\lSeconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/dc4/classUE_1_1FTimeout.html#a74410656796b4f5da3d8f7a2e91ed0b6",tooltip="Safely modify the remaining time by adding the delta time in seconds to the timeout."];
}
