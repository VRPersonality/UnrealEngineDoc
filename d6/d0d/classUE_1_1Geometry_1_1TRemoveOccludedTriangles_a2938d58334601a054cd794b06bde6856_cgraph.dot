digraph "UE::Geometry::TRemoveOccludedTriangles::Select"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::TRemoveOccluded\lTriangles::Select",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Select the occluded triangles â€“ single instance case."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TRemoveOccluded\lTriangles::Select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d0d/classUE_1_1Geometry_1_1TRemoveOccludedTriangles.html#a600c6c9490e4159c83aff93883b85c79",tooltip="Select the occluded triangles, considering the given occluder AABB trees (which may represent more ge..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::TRemoveOccluded\lTriangles::Cancelled",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d0d/classUE_1_1Geometry_1_1TRemoveOccludedTriangles.html#a1eee1fc654a3ada140764a8494f86bcc",tooltip="if this returns true, abort computation."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TArray::Emplace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a084ac3e03e7fe74b0b2d28cd8695c197",tooltip="Constructs a new item at the end of the array, possibly reallocating the whole array to fit."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FRandomStream::FRand",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#ae0e25bae1ff809ffee3c6b9b20ed47e3",tooltip="Mirrors the random number API in FMath."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FRandomStream::GetFraction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#ac16be3220ec5e3f287669def3ef94732",tooltip="Returns a random float number in the range [0, 1)."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FRandomStream::MutateSeed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#a33bec253a5ffd9ec9c6501a7507b15e2",tooltip="Mutates the current seed into the next seed."];
  Node2 -> Node9 [id="edge8_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Geometry::TQuaternion\l\< double \>::Identity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d55/structUE_1_1Geometry_1_1TQuaternion.html#a2213d24dcfd62dcca292b856da86b956",tooltip=" "];
  Node2 -> Node10 [id="edge9_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Geometry::TTransform\lSRT3\< double \>::Identity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dfd/classUE_1_1Geometry_1_1TTransformSRT3.html#a0f18a2571930f868aff1ac5a6cb6167a",tooltip=" "];
  Node2 -> Node11 [id="edge10_Node000002_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TArray::Init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a70c760cb623372583b8f78378bf9bd62",tooltip="Sets the size of the array, filling it with the given element."];
  Node2 -> Node12 [id="edge11_Node000002_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TArray::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#adcbf9ca48677a9c0c3830cd862dd40d8",tooltip="Returns number of elements in array."];
  Node2 -> Node13 [id="edge12_Node000002_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TArrayView::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d13/classTArrayView.html#ae5b1658ae1312e54b0d669664cbf88ed",tooltip="Returns number of elements in array."];
  Node2 -> Node14 [id="edge13_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TVector\<\l double \>::One",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a19e81ed2743b21da4b49a820027b98c4",tooltip=" "];
  Node2 -> Node15 [id="edge14_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="ParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/da1/ParallelFor_8h.html#a68b625089b9c041b662a1605dbef98f0",tooltip="General purpose parallel for that uses the taskgraph."];
  Node2 -> Node16 [id="edge15_Node000002_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TMathUtil\< double \>\l::SignNonZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8b/classTMathUtil.html#ab2e82ae4fff89a30db9318b2afc52643",tooltip=" "];
  Node2 -> Node17 [id="edge16_Node000002_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Math::TVector\<\l double \>::UnitX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a0e0b071b046b291ee8a01bfef83d1d9a",tooltip=" "];
  Node2 -> Node18 [id="edge17_Node000002_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Math::TVector\<\l double \>::UnitY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a3619ded05b09c980e0fa8fbdbc8a9149",tooltip=" "];
  Node2 -> Node19 [id="edge18_Node000002_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Math::TVector\<\l double \>::UnitZ",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a4f82c347efaed07b5580a24dcf2f4f0c",tooltip=" "];
  Node2 -> Node20 [id="edge19_Node000002_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="FRandomStream::VRand",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#a11492655ca4737d691defce93f4cf6bb",tooltip="Returns a random vector of unit size."];
  Node20 -> Node21 [id="edge20_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="FRandomStream::GetUnitVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#a518236f03fdafb19d2a2f7cb7e5bda80",tooltip="Returns a random vector of unit size."];
  Node21 -> Node7 [id="edge21_Node000021_Node000007",color="steelblue1",style="solid",tooltip=" "];
}
