digraph "UE::Math::TQuat::TQuat"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Math::TQuat::TQuat",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor (no initialization)."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TQuat::Angular\lDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a8cf9bc2efc470a59e80e25e071b1ca1c",tooltip="Find the angular distance between two rotation quaternions (in radians)"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Math::TQuat::Enforce\lShortestArcWith",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a34aa07534748ced01346daffb1ca4425",tooltip="Enforce that the delta between this Quaternion and another one represents the shortest possible rotat..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="AnimationMath::SimpleSpring\lDamperQuat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d39/namespaceAnimationMath.html#a1c73df986566c9b4f54b49e5567d7e53",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TQuat::Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a88f4dac61ee334e190b200393b3226df",tooltip="Checks whether another Quaternion is equal to this, within specified tolerance."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TQuat::IsIdentity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a52ed12158a31cb8874be06a84ee5c768",tooltip="Checks whether this Quaternion is an Identity Quaternion."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TQuat::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a11a1acb8f175e746d0fc04658d39f51d",tooltip="Error measure (angle) between two quaternions, ranged [0..1]."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TQuat::ErrorAuto\lNormalize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a676346783bd435b3965a09d715a3d414",tooltip="TQuat<T>::Error with auto-normalization."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Math::TQuat::FastBilerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a5d7ebefd6bab475a21d428430e215988",tooltip="Bi-Linear Quaternion interpolation."];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TQuat::FastLerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ad56274f9b889664a0598933c52b19cf8",tooltip="Fast Linear Quaternion Interpolation."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TTransform\l\< double \>::Blend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#aec9273f9f154dd6bde7debe8d19c4402",tooltip=" "];
  Node10 -> Node12 [id="edge12_Node000010_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Math::TTransform\l\< double \>::BlendWith",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a5da59846611a8f97e936aa573a93fd69",tooltip=" "];
  Node10 -> Node9 [id="edge13_Node000010_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge14_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TQuat::GetNormalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ac2932129ed4497f07789fe0702b93fe8",tooltip="Get a normalized copy of this quaternion."];
  Node13 -> Node14 [id="edge15_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::AnimNext::TTransform\lArraySoA\< FDefaultAllocator\l \>::Blend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dbb/structUE_1_1AnimNext_1_1TTransformArraySoA.html#acf120c275104b27288e0835bf3dc9066",tooltip=" "];
  Node13 -> Node15 [id="edge16_Node000013_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="FRotationConversionCache\l::QuatToRotator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d09/structFRotationConversionCache.html#a1d395a0c18b0440d0947ebd771e87538",tooltip="Convert a FQuat to FRotator."];
  Node13 -> Node16 [id="edge17_Node000013_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FRotationConversionCache\l::QuatToRotator_ReadOnly",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d09/structFRotationConversionCache.html#a832c684637c620744183090ae6505523",tooltip="Convert a FQuat to FRotator."];
  Node13 -> Node17 [id="edge18_Node000013_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Math::TQuat\< double\l \>::Slerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a2fb6474451f49624f73b8dfe078af8ff",tooltip=" "];
  Node17 -> Node18 [id="edge19_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="AnimationMath::Damper",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d39/namespaceAnimationMath.html#a125fca79a7b901f6a057a07c8183d432",tooltip=" "];
  Node17 -> Node17 [id="edge20_Node000017_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge21_Node000017_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Math::TQuat\< double\l \>::Slerp_NotNormalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ab548d769910eb766aef991fb1a79cc4a",tooltip=" "];
  Node13 -> Node20 [id="edge22_Node000013_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Math::TQuat\< double\l \>::SlerpFullPath",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ac6381081331028c2f52072d6aaa466bf",tooltip=" "];
  Node1 -> Node21 [id="edge23_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="UE::Math::TQuat::GetShortest\lArcWith",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a0140e1d6298b5ca85cecce9a9bbfa170",tooltip="Returns the version of this quaternion that represents the shortest rotation angle to the other quate..."];
  Node1 -> Node22 [id="edge24_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="UE::Math::TQuat::Identical",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a0b7688faa4f3ab033d9dda59572a72dd",tooltip="Identical implementation for TQuat properties."];
  Node1 -> Node23 [id="edge25_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="UE::Math::TQuat::Inverse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a1d963d24f3e1360295221a19a78a847c",tooltip=" "];
  Node23 -> Node4 [id="edge26_Node000023_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge27_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="UE::Math::TQuat::MakeFrom\lLUFEuler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a017f390b5c520d6573d88883732ff04a",tooltip=" "];
  Node1 -> Node25 [id="edge28_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="UE::Math::TQuat::MakeFrom\lRotationVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ac566071011489d1aed35d77cc742206f",tooltip="Constructs a quaternion corresponding to the rotation vector."];
  Node1 -> Node26 [id="edge29_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="UE::Math::TQuat\< double\l \>::MakeFromRotator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a6f7291b9e98daa531fe1058b0e65c35d",tooltip=" "];
  Node1 -> Node27 [id="edge30_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::Math::TQuat\< double\l \>::MakeFromVectorRegister",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ae38f95c6a4bfb9218d220dd62cb9c8a7",tooltip=" "];
  Node1 -> Node28 [id="edge31_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="UE::Math::TQuat::operator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a50fb3cad02073e32664d3f55dca0ca48",tooltip="Checks whether two quaternions are not identical."];
  Node1 -> Node29 [id="edge32_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Math::TQuat::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#ac52dd1f9d504a6e71db7e2df93fc7ea7",tooltip="Gets the result of multiplying this by another quaternion (this * Q)."];
  Node1 -> Node30 [id="edge33_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="UE::Math::TQuat\< double\l \>::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#aaec8d41986db3ed0440b41a26c1f480e",tooltip=" "];
  Node1 -> Node31 [id="edge34_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="UE::Math::TQuat::operator*=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a0f21a334d3986483546cb46c70cb9bad",tooltip="Multiply this by a quaternion (this = this * Q)."];
  Node1 -> Node32 [id="edge35_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="UE::Math::TQuat::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#aeeb27ba8ccda7c10ee5504bae74b2351",tooltip="Gets the result of adding a Quaternion to this."];
  Node1 -> Node33 [id="edge36_Node000001_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="UE::Math::TQuat::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a444a2b01431ce87913aa54c3c2168ddb",tooltip="Adds to this quaternion."];
  Node1 -> Node34 [id="edge37_Node000001_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="UE::Math::TQuat::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a9b69669b8175286c4146d49ae20b9439",tooltip="Negates the quaternion."];
  Node1 -> Node35 [id="edge38_Node000001_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="UE::Math::TQuat::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a9ca3761113ea0dcf6e4af721c2466793",tooltip="Gets the result of subtracting a Quaternion to this."];
  Node1 -> Node36 [id="edge39_Node000001_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="UE::Math::TQuat::operator-=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#afb89bd13f254655dd01356f00e157aa6",tooltip="Subtracts another quaternion from this."];
  Node1 -> Node37 [id="edge40_Node000001_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="UE::Math::TQuat\< double\l \>::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#af8d09274f5e60e03a00ebdf82c8409ff",tooltip=" "];
  Node1 -> Node38 [id="edge41_Node000001_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="UE::Math::TQuat::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a95d81f428d8efcf283d839325aef5e64",tooltip="Checks whether two quaternions are identical."];
  Node1 -> Node39 [id="edge42_Node000001_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="UE::Math::TQuat::operator\|",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a0fe02823acd67d1d89bfc006c61107d4",tooltip="Calculates dot product of two quaternions."];
  Node1 -> Node40 [id="edge43_Node000001_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="UE::Math::TQuat::ToRotation\lVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a7f76d8067919efb1b0c8b9faeb18fc8a",tooltip="Get the rotation vector corresponding to this quaternion."];
}
