digraph "UE::Geometry::FMeshOffsetBaseOp::CalculateResult"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::FMeshOffset\lBaseOp::CalculateResult",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Calculate the result of the operator."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::FMeshOffset\lBaseOp::CalculateOffset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d81/classUE_1_1Geometry_1_1FMeshOffsetBaseOp.html#a5e2ae767bd197fc7232607ab343290a7",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Geometry::FDynamicMesh3\l::Copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a178849b645e6807449f887b2e155bcd1",tooltip="Set internal data structures to be a copy of input mesh using the specified attributes."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::FDynamicMesh3\l::FDynamicMesh3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#af7477b3cc863bc9c125a01d1dd70b134",tooltip="Default constructor."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::FMeshIndex\lMappings::GetNewVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d3d/structUE_1_1Geometry_1_1FMeshIndexMappings.html#a059905dc28c7518e3f64c4159bacbdcb",tooltip=" "];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::FEdgeLoop\l::GetVertexCount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dd6/classUE_1_1Geometry_1_1FEdgeLoop.html#af9a397ac52275e0b11c51a6cce91577f",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::FDynamicMesh3\l::ReverseOrientation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a092381acad97a571692b9f08e8793ccb",tooltip="Reverse the ccw/cw orientation of all triangles in the mesh, and optionally flip the vertex normals i..."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TArray::SetNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a38b903bce3a5367f41d2268ee6a58d0a",tooltip="Resizes array to given number of elements."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Geometry::FSimpleMesh\lProcessingBaseOp::UpdateResult\lMeshNormals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/ddb/classUE_1_1Geometry_1_1FSimpleMeshProcessingBaseOp.html#a52c86cf73b8d8677b31d5083a1c89844",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Geometry::FSimpleMesh\lProcessingBaseOp::UpdateResult\lMeshPositions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/ddb/classUE_1_1Geometry_1_1FSimpleMeshProcessingBaseOp.html#ade390a98467722357e6b5b8ed9c8ec06",tooltip=" "];
}
