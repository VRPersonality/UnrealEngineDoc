digraph "FBookMarkTypeActions::InitFromViewport"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FBookMarkTypeActions\l::InitFromViewport",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Called to initialize the given bookmark from the given Viewport."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Cast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d55/Casts_8h.html#af337187a7ebe36fac35ea41db8a65ba9",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FEditorViewportClient\l::GetViewLocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a3f7828c4f89e482755ad4bd3b4a5aaaf",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FViewportCameraTransform\l::GetLocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d97/structFViewportCameraTransform.html#ad02b4aa3e56808ef71b2ef89a2ea14ef",tooltip=" "];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FEditorViewportClient\l::GetViewTransform",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a8e08badd4ec988c5d68035e050115c30",tooltip="Gets ViewportCameraTransform object for the current viewport type."];
  Node5 -> Node5 [id="edge5_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FEditorViewportClient\l::IsPerspective",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a83795f10bc66b8be496ece6472cfdcba",tooltip="Returns true if this viewport is perspective."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FEditorViewportClient\l::GetViewRotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a0d847c414cab7330365d829a57c1500a",tooltip=" "];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FViewportCameraTransform\l::GetRotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d97/structFViewportCameraTransform.html#a3b4d9a6be3c89af9a4c059c6836cb898",tooltip=" "];
  Node7 -> Node5 [id="edge9_Node000007_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge10_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FEditorViewportClient\l::GetWorld",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a3f18d58edc1d667d8f94f7bbdd108e12",tooltip="Use the viewports Scene to get a world."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FEditorViewportClient\l::IsOrtho",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classFEditorViewportClient.html#a02de3865fa5518d475b32ccb13784d3a",tooltip="Returns true if this viewport is orthogonal."];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TVector::\lRotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a10c0e92af4419d533569474d71d1ae37",tooltip="Return the UE::Math::TRotator<T> orientation corresponding to the direction in which the vector point..."];
}
