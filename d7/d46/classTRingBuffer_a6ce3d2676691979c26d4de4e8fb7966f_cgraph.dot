digraph "TRingBuffer::MoveAppendRange"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TRingBuffer::MoveAppendRange",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Append elements from a range onto the back pointer of the RingBuffer, resizing if necessary."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TRingBuffer::GetStorage",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#aa2fcf0b111c159373c595c9a3ae6cbd2",tooltip="Return a pointer to the underlying storage of the RingBuffer."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TRingBuffer::TRingBuffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a8c285901c0c99ff13fe22f8035b51cb0",tooltip="Construct Empty Queue with capacity 0."];
  Node2 -> Node2 [id="edge3_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="MoveConstructItems",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dea/MemoryOps_8h.html#a2d73817e71f2b06a5a63ea9fec8a3f76",tooltip="Move constructs a range of items into memory."];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FMemory::Memmove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d4a/structFMemory.html#a79d3be0945272bfb7e90a7f627c417e4",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FGenericPlatformMemory\l::Memmove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dfd/structFGenericPlatformMemory.html#a6764c99e53febebbd69236190a4675bd",tooltip="Copies count bytes of characters from Src to Dest."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TRingBuffer::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a5c37b30f4de47dfe15a368ba4c353568",tooltip="Gets the number of elements in the RingBuffer."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TRingBuffer::Reserve",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#ad5afdf357d92063d22eeae51e6a0b66d",tooltip="Set the capacity to the maximum of the current capacity and the (next power of two greater than or eq..."];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TRingBuffer::Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a841b0cf4b4a9b0ba7a1340fa47e50bb1",tooltip="Current allocated Capacity, note this will always be a power of two, or the special case 0."];
  Node8 -> Node10 [id="edge10_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TRingBuffer::NormalizeCapacity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a58f96dab51dcdf981703af3cfc9da2fc",tooltip="Convert the requested capacity into the implementation-specific actual capacity that should be used."];
  Node8 -> Node11 [id="edge11_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TRingBuffer::Reallocate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a40faf3a6ccf66edf23df3483f309d523",tooltip="Set the capacity to the given value and move or copy all elements from the old storage into a new sto..."];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TRingBuffer::AllocatorResize\lAllocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a207f4683db0ff774ffe850e793bac7b7",tooltip=" "];
  Node11 -> Node13 [id="edge13_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TRingBuffer::DestructRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a7859abfc28865cfa7f653b915bb17885",tooltip="Destruct all elements in the RingBuffer from Index RangeStart to Index RangeEnd."];
  Node13 -> Node14 [id="edge14_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="DestructItems",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dea/MemoryOps_8h.html#a0b36507a3186ec48a12d43548b47f669",tooltip="Destructs a range of items in memory."];
  Node13 -> Node2 [id="edge15_Node000013_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node9 [id="edge16_Node000013_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node15 [id="edge17_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="TRingBuffer::NeedsDestruct\lElements",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a4ddd780cb625faa57f3eafa584b58e6e",tooltip=" "];
  Node11 -> Node2 [id="edge18_Node000011_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node9 [id="edge19_Node000011_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node16 [id="edge20_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
  Node11 -> Node10 [id="edge21_Node000011_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node7 [id="edge22_Node000011_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge23_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="TRingBuffer::SlackTracker\lNumChanged",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d46/classTRingBuffer.html#a15b4c13937861b41854ce00000ffc290",tooltip=" "];
  Node17 -> Node7 [id="edge24_Node000017_Node000007",color="steelblue1",style="solid",tooltip=" "];
}
