digraph "FScopedDurationAtomicTimer::~FScopedDurationAtomicTimer"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FScopedDurationAtomicTimer\l::~FScopedDurationAtomicTimer",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Dtor, updating seconds with time delta."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FDurationAtomicTimer\l::Stop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d08/classFDurationAtomicTimer.html#a11217fce842da80a8b00e7e9ae61c9ab",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="AtomicDoubleFetchAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d18/ScopedTimers_8h.html#a62b7c7738a8e357b4a81125d276c6f3f",tooltip="Implements the same behavior as std::atomic<double>.fetch_add(double Delta), which is only available ..."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FAndroidTime::Seconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d27/structFAndroidTime.html#ad64caf5a4cf7be5a98034240d951a54e",tooltip=" "];
}
