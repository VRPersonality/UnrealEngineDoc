digraph "UE::Math::TRotator::Normalize"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Math::TRotator\l::Normalize",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="In-place normalize, removes all winding and creates the \"shortest route\" rotation."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TRotator\l::GetNormalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a5a6ca36a05289441b12eb8c4d8e2948a",tooltip="Create a copy of this rotator and normalize, removes all winding and creates the \"shortest route\" rot..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FMath::LerpRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a8e070e636fff28b1b1f076f71a8218db",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FRotationConversionCache\l::RotatorToQuat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d09/structFRotationConversionCache.html#ab2d08cb7cbeb5e985c5787298523ff55",tooltip="Convert a FRotator to FQuat."];
}
