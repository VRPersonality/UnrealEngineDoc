digraph "UE::Math::TRotator::TRotator"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Math::TRotator\l::TRotator",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor (no initialization)."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TRotator::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a98189b0abc51495c2ec1c63cee3aeb59",tooltip="Adds to each component of the rotator."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Math::TRotator\l::Clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a296e37c6fec007335e4c8f3219be9a4a",tooltip="Gets the rotation values so they fall within the range [0,360]."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Math::TRotator\l::Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a084aa736afda200320b502b7177bb58d",tooltip="Checks whether two rotators are equal within specified tolerance, when treated as an orientation."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TRotator\l::EqualsOrientation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a55fbb752b43b940cb0ae13d9b3a501ba",tooltip="Checks whether two rotators have the same orientation within the specified tolerance,..."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TRotator\l::GetDenormalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a2e2013f282eff75b41ea8b9c68e2afc4",tooltip="Create a copy of this rotator and denormalize, clamping each axis to 0 - 360."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TRotator\l::GetEquivalentRotator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a5379aa9a07fdbde2bf10ba273c38033b",tooltip="Return a Rotator that has the same rotation but has different degree values for Yaw,..."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TRotator\l::SetClosestToMe",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a4ae9dbdac6c9daf4f0cee5ba49d54c10",tooltip="Modify if necessary the passed in rotator to be the closest rotator to it based upon it's equivalent."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Math::TRotator\l::GetManhattanDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a881c21fa9b246e1aaff335c01cb57801",tooltip="Return the manhattan distance in degrees between this Rotator and the passed in one."];
  Node9 -> Node8 [id="edge9_Node000009_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TRotator\l::GetNormalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a5a6ca36a05289441b12eb8c4d8e2948a",tooltip="Create a copy of this rotator and normalize, removes all winding and creates the \"shortest route\" rot..."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="FMath::LerpRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a8e070e636fff28b1b1f076f71a8218db",tooltip=" "];
  Node10 -> Node12 [id="edge12_Node000010_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="FRotationConversionCache\l::RotatorToQuat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d09/structFRotationConversionCache.html#ab2d08cb7cbeb5e985c5787298523ff55",tooltip="Convert a FRotator to FQuat."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TRotator\l::GridSnap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a354b83e0db71f93375f4412227218328",tooltip="Get the rotation, snapped to specified degree segments."];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TRotator\l::operator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a26c44175ea78f119477cb42c64125101",tooltip="Checks whether two rotators are different."];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Math::TRotator\l\< double \>::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a8c38e0b8a55f35fa13d0ec71b40bae5c",tooltip=" "];
  Node1 -> Node16 [id="edge16_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Math::TRotator\l::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a0e9c1ab09f9db1c7494b7faf72611075",tooltip="Get the result of adding a rotator to this."];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Math::TRotator\l::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a57c273a8507ba5932949ef33c1171574",tooltip="Adds another rotator to this."];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Math::TRotator\l::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a85d772a3d7fdcc7e9e6957ee191d4687",tooltip="Get the result of subtracting a rotator from this."];
  Node1 -> Node19 [id="edge19_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Math::TRotator\l::operator-=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a9a9606e79a31fab40f7a11d3fca870ab",tooltip="Subtracts another rotator from this."];
  Node1 -> Node20 [id="edge20_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Math::TRotator\l::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a754853003aaaa8f65b59f4183991bdfb",tooltip="Checks whether two rotators are identical."];
  Node1 -> Node8 [id="edge21_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
