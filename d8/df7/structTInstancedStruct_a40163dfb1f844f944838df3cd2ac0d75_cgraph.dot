digraph "TInstancedStruct::TInstancedStruct"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TInstancedStruct::TInstanced\lStruct",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="This constructor is explicit to avoid accidentally converting struct views to instanced structs (whic..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FConstStructView::GetMemory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d57/structFConstStructView.html#aaace6ae60032fa40741e5a47d84d1562",tooltip="Returns const pointer to struct memory."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FConstStructView::GetScript\lStruct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d57/structFConstStructView.html#a8b5104b9154dbaa05fd645aa2a9e6377",tooltip="Returns struct type."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TInstancedStruct::Initialize\lAsScriptStruct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/df7/structTInstancedStruct.html#a411c0d4b11b705ff5a5d092f0a196e4f",tooltip="Initializes from a raw struct type and optional data."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TBaseStructureBase::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d61/structTBaseStructureBase.html#a0293c35703fa02b53edae7b546be5b75",tooltip=" "];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UStruct::IsChildOf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d19/classUStruct.html#a8e3ec7a5e338fc3b99e3d81bf07d4311",tooltip="Returns true if this struct either is class T, or is a child of class T."];
  Node6 -> Node6 [id="edge6_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
}
