digraph "UE::DirectoryTree::FindInsertionIndex"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::DirectoryTree::\lFindInsertionIndex",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDirectoryTree::FTreeNode\l::FindInsertionIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a7e827418b760dcd228f7de2fbebcd3d9",tooltip="Search the sorted ChildNode RelPaths for the given FirstPathComponent, which must be only a single pa..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TDirectoryTree::FTreeNode\l::ContainsChildPaths",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a945536fcf725e8cf57fe73358c5c17c2",tooltip="Recursively search this node's subtree for the given relative path, then return whether that path has..."];
  Node3 -> Node3 [id="edge3_Node000003_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node4 [id="edge4_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDirectoryTree::FTreeNode\l::Find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a36218170ed9bd86757e682fc0a661919",tooltip="Return pointer to the Value stored in RelPath, if RelPath exists in the tree."];
  Node4 -> Node4 [id="edge5_Node000004_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node5 [id="edge6_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TDirectoryTree::FTreeNode\l::FindOrAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#ab8175a05fbd95dcc4805a6eb2676a52f",tooltip="Recursively search the node's subtree to find the given relative directory name, adding nodes for the..."];
  Node5 -> Node5 [id="edge7_Node000005_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node6 [id="edge8_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TDirectoryTree::FTreeNode\l::Remove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a09c3ff5a89134db663c4c5dcdc5b1a0c",tooltip="Remove the Value if it exists in the tree."];
  Node6 -> Node6 [id="edge9_Node000006_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node7 [id="edge10_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TDirectoryTree::FTreeNode\l::TryFindClosestPath",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#aed4ccd3da2d1663e17939c8e330183bf",tooltip="Recursively search the node's subtree to find the given RelPath."];
  Node7 -> Node7 [id="edge11_Node000007_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node8 [id="edge12_Node000002_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TDirectoryTree::FTreeNode\l::TryGetChildren",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d19/structTDirectoryTree_1_1FTreeNode.html#a81cdb4e026c8f14e7e939e03df5f2022",tooltip=" "];
  Node8 -> Node8 [id="edge13_Node000008_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
