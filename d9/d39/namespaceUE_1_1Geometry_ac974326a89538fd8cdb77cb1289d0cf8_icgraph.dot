digraph "UE::Geometry::Length"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Geometry::Length",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TPlane3\l\< FVector::FReal \>::ClipSegment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d20/structUE_1_1Geometry_1_1TPlane3.html#ab4c3aba6517f566927961fbc93259d91",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="MeshDebugDraw::DrawNormals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/de8/namespaceMeshDebugDraw.html#a3ad6dfc9e6c046dfdc458faf40d177c0",tooltip="Draw normals of mesh overlay as lines."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::TMeshQueries\l::EdgeLengthStats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#ae1877786c94dbd17339c0b90e5c697de",tooltip="Compute the min, max, and mean edge lengths for the given mesh."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::TMeshQueries\l::EdgeLengthStatsFromEdges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a458f3d1ea1d6cebbbec4728ecb4b13bc",tooltip="Given a mesh and a subset of mesh edges, compute the min, max, and mean edge lengths."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::TMeshQueries\l::GetAllEdgeLengths",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a34fa3af6118787b371de2bd35caadd2d",tooltip="Compute the length for each edge and return the result as an array of Mesh.MaxEdgeID() size."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::TMeshQueries\l::MaxEdgeLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a14ae35a8b42f92160d991ee5b0559028",tooltip="Compute the longest edge length for the given mesh."];
  Node7 -> Node4 [id="edge7_Node000007_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node5 [id="edge8_Node000007_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::TMeshQueries\l::MinEdgeLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#ac3ac7b2d113b61ce1aeac821a27edcd0",tooltip="Compute the shortest edge length for the given mesh."];
  Node8 -> Node4 [id="edge10_Node000008_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node5 [id="edge11_Node000008_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
