digraph "TMemoryImageAllocator::ForAnyElementType::CalculateSlackGrow"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TMemoryImageAllocator\l::ForAnyElementType::\lCalculateSlackGrow",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="DefaultCalculateSlackGrow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dff/ContainerAllocationPolicies_8h.html#a8590ad621afa0ccc3b1bd0e66137db70",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FMemory::QuantizeSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d4a/structFMemory.html#ae59ac0f68b3c1bef79e63341687569fb",tooltip="For some allocators this will return the actual size that should be requested to eliminate internal f..."];
  Node3 -> Node3 [id="edge3_Node000003_Node000003",color="steelblue1",style="solid",tooltip=" "];
}
