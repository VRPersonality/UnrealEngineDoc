digraph "UE::Geometry::TDynamicVerticesOctree3::FindNearestHitVertex"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::TDynamicVertices\lOctree3::FindNearestHitVertex",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Find the nearest triangle of the VertexSource that is hit by the ray."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::FSparseDynamic\lPointOctree3::FindNearestHitPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dcf/classUE_1_1Geometry_1_1FSparseDynamicPointOctree3.html#af2d720191b7077e68d144ca3c07789c6",tooltip="Find nearest ray-hit point with Points in tree."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node2 -> Node2 [id="edge3_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node4 [id="edge4_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::FSparseDynamic\lPointOctree3::FindNearestRayCell\lIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dcf/classUE_1_1Geometry_1_1FSparseDynamicPointOctree3.html#a95a143f690eadf7f8a64640d8e4a7ee6",tooltip=" "];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::TIntrRay3Axis\lAlignedBox3\< double \>::FindIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d47/classUE_1_1Geometry_1_1TIntrRay3AxisAlignedBox3.html#adf5b338d6811853a17703e38968c9a52",tooltip=" "];
  Node4 -> Node4 [id="edge6_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node6 [id="edge7_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::FSparseDynamic\lPointOctree3::GetCellBox",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dcf/classUE_1_1Geometry_1_1FSparseDynamicPointOctree3.html#a210cc0dbbafad7648afdb8349aa88faf",tooltip=" "];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::FSparseDynamic\lPointOctree3::GetCellWidth",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dcf/classUE_1_1Geometry_1_1FSparseDynamicPointOctree3.html#a42c26217e9254e8332c2b3373e71d80a",tooltip=" "];
  Node2 -> Node8 [id="edge9_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TArray::Num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#adcbf9ca48677a9c0c3830cd862dd40d8",tooltip="Returns number of elements in array."];
  Node2 -> Node9 [id="edge10_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TArray::Pop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#af75d51184a3b156af56c964be466bce7",tooltip="Pops element from the array."];
  Node2 -> Node10 [id="edge11_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TArray::Reserve",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a9225b97632948348a65bb19ff212bc08",tooltip="Reserves memory such that the array can contain at least Number elements."];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="IntersectionUtil::RaySphere\lIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d8c/namespaceIntersectionUtil.html#af4e477ef582b211b804e9fd39cfe67a7",tooltip="Intersect ray with sphere and return intersection info (# hits, ray parameters)"];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="IntersectionUtil::LineSphere\lIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d8c/namespaceIntersectionUtil.html#a498a4cceb845fddb60443b7a907bafbe",tooltip="Intersect line with sphere and return intersection info (# hits, ray parameters)"];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TVector::Dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#ab075a0794fafe258342a2a336529bbce",tooltip="Calculate the dot product between this and another vector."];
  Node13 -> Node14 [id="edge15_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TVector::\lTVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a50071892cd411543cbbb3d9d35a6f277",tooltip="Default constructor (no initialization)."];
  Node12 -> Node15 [id="edge16_Node000012_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Math::TVector::\lSquaredLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a2ae6e1a342369e70d4ac3b6d8cdd3f15",tooltip="Get the squared length of this vector."];
  Node15 -> Node16 [id="edge17_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Math::TVector::\lSizeSquared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#aa34e5d2379446a1ede5472a9d0da044c",tooltip="Get the squared length of this vector."];
}
