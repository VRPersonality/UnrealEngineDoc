digraph "TResizingWidgetSlotMixin::SetSizeToStretch"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TResizingWidgetSlotMixin\l::SetSizeToStretch",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="The available space will be distributed proportionately to each slots stretch coefficient."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="MoveTemp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#ad5e6c049aeb9c9115fec514ba581dbb6",tooltip="MoveTemp will cast a reference to an rvalue reference."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TResizingWidgetSlotMixin\l::SetSizeParam",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d83/classTResizingWidgetSlotMixin.html#ab4b436e5557957d1c4c4db61b93c529e",tooltip="Set the size Param of the slot, It could be a FStretch, FStretchContent, or a FAuto."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TAttribute::IsSet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dcd/classTAttribute.html#a3a062929dd69ffe2d59ba4ab8e2234c2",tooltip="Was this TAttribute ever assigned?"];
  Node3 -> Node2 [id="edge4_Node000003_Node000002",color="steelblue1",style="solid",tooltip=" "];
}
