digraph "Algo::TransformAccumulate"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="Algo::TransformAccumulate",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Sums a range by applying MapOp to each element, and then summing the results."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TMeshQueries\l::AverageEdgeLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a4123d502100a29758c424a57d6e98e9c",tooltip="Compute the mean edge length for the given mesh."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Geometry::TImplicitMorphology\l::ComputeFirstPass",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d36/classUE_1_1Geometry_1_1TImplicitMorphology.html#aa711192ec5412aeed8c7717e2f359033",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::TImplicitMorphology\l::Generate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d36/classUE_1_1Geometry_1_1TImplicitMorphology.html#ac0ee915d18899624a8221811e5054dcb",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::TMeshQueries\l::EdgeLengthStats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#ae1877786c94dbd17339c0b90e5c697de",tooltip="Compute the min, max, and mean edge lengths for the given mesh."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::TMeshQueries\l::EdgeLengthStatsFromEdges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a458f3d1ea1d6cebbbec4728ecb4b13bc",tooltip="Given a mesh and a subset of mesh edges, compute the min, max, and mean edge lengths."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FMeshDescription::GetNum\lVertexConnectedTriangles",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d5f/structFMeshDescription.html#a7277e9ad5bff323d569137e1aea0f5a4",tooltip="Returns number of triangles connected to this vertex."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FMeshDescription::GetVertex\lConnectedTriangles",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d5f/structFMeshDescription.html#a39b84f9791c7457a5975c81316a27411",tooltip="Populates the passed array of TriangleIDs with the triangles connected to this vertex."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FMeshDescription::GetVertex\lConnectedTriangles",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d5f/structFMeshDescription.html#aeb4c40a56fb6161dd3eb3a1a83acf1fe",tooltip="Returns the triangles connected to this vertex as an array with the specified allocator template type..."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Algo::TransformAccumulate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d33/namespaceAlgo.html#acff52cd2bbdffd02bc8f812a41ed4be7",tooltip="Sums a range by applying MapOp to each element, and then summing the results."];
}
