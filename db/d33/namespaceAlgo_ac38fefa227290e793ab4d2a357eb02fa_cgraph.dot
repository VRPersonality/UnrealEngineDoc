digraph "Algo::LevenshteinDistance"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Algo::LevenshteinDistance",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="LevenshteinDistance return the number of edit operation we need to transform RangeA to RangeB."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TArray::AddUninitialized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a9d492bd65dc35e24fbbfd0e47b1b3c19",tooltip="Adds a given number of uninitialized elements into the array."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddf/StringConv_8h.html#a4111b73e6a9d7101173e7223118962f3",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="GetNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddf/StringConv_8h.html#a3caf5874b63a514dc33c219ec83eedbf",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FMath::Min3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a6dfed2625d695f46993b236099996d40",tooltip="Returns lowest of 3 values."];
}
