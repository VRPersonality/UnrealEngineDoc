digraph "FPersonaModule::FNotifyHostAssetParameters"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">FPersonaModule::FNotifyHost<BR ALIGN="LEFT"/>AssetParameters</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" ",label=<<TABLE CELLBORDER="0" BORDER="0"><TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">+OnReplaceNotify</TD></TR>
</TABLE>> ,fontcolor="grey" ,arrowhead="odiamond"];
  Node2 [id="Node000002",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">TDelegate&lt; void(UObject<BR ALIGN="LEFT"/> *InAsset, const FString<BR ALIGN="LEFT"/> &amp;InFindString, const FString<BR ALIGN="LEFT"/> &amp;InReplaceString, bool bFindWholeWord,<BR ALIGN="LEFT"/> ESearchCase::Type InSearchCase)&gt;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/dbf/classTDelegate.html",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="orange",style="solid",tooltip=" ",label=<<TABLE CELLBORDER="0" BORDER="0"><TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&lt; void(UObject *InAsset,</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp; const FString &amp;InFindString,</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp; const FString &amp;InReplaceString,</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp; bool bFindWholeWord, ESearchCase</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp;::Type InSearchCase)&gt;</TD></TR>
</TABLE>> ,fontcolor="grey" ];
  Node3 [id="Node000003",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">TDelegate&lt; FuncType,<BR ALIGN="LEFT"/> UserPolicy &gt;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/dbf/classTDelegate.html",tooltip=" "];
  Node4 -> Node1 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" ",label=<<TABLE CELLBORDER="0" BORDER="0"><TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">+OnRemoveNotify</TD></TR>
</TABLE>> ,fontcolor="grey" ,arrowhead="odiamond"];
  Node4 [id="Node000004",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">TDelegate&lt; void(UObject<BR ALIGN="LEFT"/> *InAsset, const FString<BR ALIGN="LEFT"/> &amp;InFindString, bool bFindWhole<BR ALIGN="LEFT"/>Word, ESearchCase::Type InSearchCase)&gt;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/dbf/classTDelegate.html",tooltip=" "];
  Node3 -> Node4 [id="edge4_Node000004_Node000003",dir="back",color="orange",style="solid",tooltip=" ",label=<<TABLE CELLBORDER="0" BORDER="0"><TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&lt; void(UObject *InAsset,</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp; const FString &amp;InFindString,</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp; bool bFindWholeWord, ESearchCase</TD></TR>
<TR><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">&nbsp;&nbsp;::Type InSearchCase)&gt;</TD></TR>
</TABLE>> ,fontcolor="grey" ];
}
