digraph "UE::Geometry::TMeshSpatialSort::Compute"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::TMeshSpatial\lSort::Compute",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TMathUtil\< double \>\l::Abs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8b/classTMathUtil.html#aa4b523e8f8c0985c28dc04179b68bd46",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::TAxisAligned\lBox3::Contain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d63/structUE_1_1Geometry_1_1TAxisAlignedBox3.html#a65b73e131b5f9a1bffdc4af2b73f87a7",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::TFastWinding\lTree::FastWindingNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#a22badc34dbae08e5099fcce8ebf00848",tooltip="Fast approximation of winding number using far-field approximations."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::TFastWinding\lTree::branch_fast_winding_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#ac14adb5319e4228c4af167af0c921192",tooltip=" "];
  Node6 -> Node6 [id="edge6_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::TFastWinding\lTree::can_use_fast_winding_cache",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#a74af7e33d5e586a4e4089e4e4337367a",tooltip=" "];
  Node6 -> Node8 [id="edge8_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::TFastWinding\lTree::evaluate_box_fast\l_winding_cache",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#a537f2e054e9505724231d86462973011",tooltip=" "];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FastTriWinding::Evaluate\lOrder1Approx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd6/namespaceFastTriWinding.html#af14f368a01f0244a9b6022266287c79e",tooltip="Evaluate first-order FWN approximation at point Q, relative to Center c."];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TVector::Dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#ab075a0794fafe258342a2a336529bbce",tooltip="Calculate the dot product between this and another vector."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TVector::\lTVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a50071892cd411543cbbb3d9d35a6f277",tooltip="Default constructor (no initialization)."];
  Node9 -> Node12 [id="edge12_Node000009_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Math::TVector::\lLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a80d757d1323cd5230143b533c9a9752e",tooltip="Get the length (magnitude) of this vector."];
  Node8 -> Node13 [id="edge13_Node000008_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FastTriWinding::Evaluate\lOrder2Approx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd6/namespaceFastTriWinding.html#aff5d2dca231db80824adef55c74a80a1",tooltip="Evaluate second-order FWN approximation at point Q, relative to Center c."];
  Node13 -> Node10 [id="edge14_Node000013_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node14 [id="edge15_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Geometry::TMatrix3\l::InnerProduct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/ddc/structUE_1_1Geometry_1_1TMatrix3.html#abddd697d2ed2ad95ab2b2cb6c9b55740",tooltip=" "];
  Node13 -> Node12 [id="edge16_Node000013_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node15 [id="edge17_Node000006_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Geometry::VectorUtil\l::TriSolidAngle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a5aaecf33a49ed5ab5a97d2833d410266",tooltip=" "];
  Node5 -> Node16 [id="edge18_Node000005_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Geometry::TFastWinding\lTree::Build",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#ac48dfd1ec3d498a39e818c1fe7d6b4cd",tooltip=" "];
  Node16 -> Node17 [id="edge19_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Geometry::TFastWinding\lTree::build_fast_winding_cache",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d0e/classUE_1_1Geometry_1_1TFastWindingTree.html#a39d674c1ecb2118382604288625cd078",tooltip=" "];
  Node17 -> Node17 [id="edge20_Node000017_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node18 [id="edge21_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Geometry::FMeshTriInfo\lCache::BuildTriInfoCache",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d55/structUE_1_1Geometry_1_1FMeshTriInfoCache.html#a5aeed565f61ee38a8a347fbb6083a68b",tooltip=" "];
  Node18 -> Node19 [id="edge22_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Geometry::TMeshQueries\l::GetTriNormalAreaCentroid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#ab850259ee74a3f13ab286f28a494e238",tooltip="Compute the normal, area, and centroid of a triangle all together."];
  Node19 -> Node20 [id="edge23_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Geometry::VectorUtil\l::NormalArea",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#ad3321cea0002505f9ee0eb3104aa87fe",tooltip="Calculate Normal and Area of triangle V0,V1,V2."];
  Node20 -> Node21 [id="edge24_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="UE::Math::TVector::\lCross",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a57142a78e1cde739013f7d1f74444ff8",tooltip="Calculate cross product between this and another vector."];
  Node21 -> Node11 [id="edge25_Node000021_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node22 [id="edge26_Node000018_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="ParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/da1/ParallelFor_8h.html#a68b625089b9c041b662a1605dbef98f0",tooltip="General purpose parallel for that uses the taskgraph."];
  Node1 -> Node23 [id="edge27_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="UE::Geometry::TMeshQueries\l::GetVolumeNonWatertight",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a034a23dc4e650336d7391373a3a31a92",tooltip="Get the volume of a mesh using a method that is more robust to inputs with holes."];
  Node23 -> Node21 [id="edge28_Node000023_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node24 [id="edge29_Node000023_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="UE::Geometry::Dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#aa284fb228d7ceece71ccaac1dfe00687",tooltip=" "];
  Node23 -> Node25 [id="edge30_Node000023_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="UE::Geometry::TMeshQueries\l::GetMeshVerticesCentroid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a5c8dd30a6bfb5d527a4c4486fed36c48",tooltip="Get the average of the mesh vertices."];
  Node1 -> Node26 [id="edge31_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="UE::Geometry::TMeshSpatial\lSort::InitBounds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dc1/classUE_1_1Geometry_1_1TMeshSpatialSort.html#a6e04e66a7d3978e5f05550ab75f2a62a",tooltip=" "];
  Node26 -> Node27 [id="edge32_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::Geometry::TMeshQueries\l::GetBounds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#ac8c5d3a82fa1b71e6ef3dcc88552c0ba",tooltip=" "];
  Node27 -> Node4 [id="edge33_Node000027_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node28 [id="edge34_Node000027_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="UE::Geometry::TAxisAligned\lBox3\< double \>::Empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d63/structUE_1_1Geometry_1_1TAxisAlignedBox3.html#a04bf6d60ed83dd154ed46a8b4b572768",tooltip=" "];
  Node1 -> Node29 [id="edge35_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Geometry::TAxisAligned\lBox3::MaxDim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d63/structUE_1_1Geometry_1_1TAxisAlignedBox3.html#aa39105490863146f27a5b65e471052d3",tooltip=" "];
  Node1 -> Node30 [id="edge36_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="TArray::SetNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a38b903bce3a5367f41d2268ee6a58d0a",tooltip="Resizes array to given number of elements."];
  Node1 -> Node31 [id="edge37_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="TArray::SetNumZeroed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#aa8b0ab747139cf02306b55e5f64caf47",tooltip="Resizes array to given number of elements, optionally shrinking it."];
  Node1 -> Node32 [id="edge38_Node000001_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="TArray::Sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#aed8d14d0ca896ffad80ddf8868c73c60",tooltip="Sorts the array assuming < operator is defined for the item type."];
}
