digraph "FMath::IsNearlyZero"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FMath::IsNearlyZero",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Checks if a floating point number is nearly zero."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ArrangeChildrenInStack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d09/LayoutUtils_8h.html#ae1bf8af69bca2cb016d358d3d48c2764",tooltip="Note that this accepts Child Proxies rather than the children themselves, allowing layout operations ..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ArrangeChildrenInStack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d09/LayoutUtils_8h.html#a32ffca0be97fcdd05b96ca999774f1b9",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ArrangeChildrenInStack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d09/LayoutUtils_8h.html#a608b3a81506574faf3a65a6c5c229b34",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="ArrangeChildrenInStack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d09/LayoutUtils_8h.html#ab8ab1f86c885d9f684a3f5da14dbe437",tooltip=" "];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FMediaIOCoreSampleContainer\l::CacheState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/df3/classFMediaIOCoreSampleContainer.html#ae00b40fca7b1f1b229958a0e091e051e",tooltip="Caches the current sample container states before samples will be taken out of it."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="IAnimationDataController\l::ConvertSecondsToFrameNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/db0/classIAnimationDataController.html#abebbfa3861c656280cae01ae48505a86",tooltip="Returns the final frame number calculating according to the Model its frame-rate, additionally output..."];
  Node7 -> Node7 [id="edge7_Node000007_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::CreateSeam\lQuadric",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a20fd04d1c2f4dd088168b7dea77ba650",tooltip="A \"Seam Quadric\" is a quadric defined with respect to the plane passing through the edge p1-p0,..."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FMath::CubicCRSplineInterpSafe",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#ae51054ccb94896f910ac524e425dad66",tooltip=" "];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FTriangleRasterizer\l::DrawTriangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc9/classFTriangleRasterizer.html#a282d4b8c35744104127ae9bedf452934",tooltip=" "];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="GetFirstLoopStartOffsetAt\lTrimTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d95/MovieSceneSection_8h.html#a70b1ce840d1537358cd415f4485d9327",tooltip="Base class for movie scene sections."];
  Node11 -> Node11 [id="edge12_Node000011_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge13_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="FMath::GetRangePct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a66b35e50adf9107885f742d4d2b0c1c0",tooltip="Calculates the percentage along a line from MinValue to MaxValue that Value is."];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FMath::GetMappedRangeValue\lClamped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a6b548d45dc6636e9936b6d0999012291",tooltip=" "];
  Node12 -> Node14 [id="edge15_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FMath::GetMappedRangeValue\lClamped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a815a09ae0c304aa421b5fd088e45daa6",tooltip="For the given Value clamped to the [Input:Range] inclusive, returns the corresponding percentage in [..."];
  Node12 -> Node15 [id="edge16_Node000012_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="FMath::GetMappedRangeValue\lUnclamped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a5493f19bc8e13a737b4d3084b73a63c4",tooltip="Transform the given Value relative to the input range to the Output Range."];
  Node12 -> Node16 [id="edge17_Node000012_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FMath::GetRangePct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#acbb75852a8eefe3f574fe663b292c6fe",tooltip=" "];
  Node12 -> Node17 [id="edge18_Node000012_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="FMath::GetRangePct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#a1257658ba3b32f2199f6e7bbcc543226",tooltip="Same as above, but taking a 2d vector as the range."];
  Node12 -> Node18 [id="edge19_Node000012_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="TInterval\< float \>\l::GetRangePct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/de1/structTInterval.html#a1abae64b07e0c8898b8caa601150807e",tooltip=" "];
  Node1 -> Node19 [id="edge20_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="FSlateClippingZone\l::HasZeroArea",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d55/classFSlateClippingZone.html#ab9d47fea8e350e812159185d30ab55e0",tooltip="Indicates if this clipping state has a zero size, aka is empty."];
  Node1 -> Node20 [id="edge21_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="FSphericalSector::IsNearlyZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d28/classFSphericalSector.html#ab5631ff34ff365810af459f6c05237b4",tooltip=" "];
  Node20 -> Node21 [id="edge22_Node000020_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="FSphericalSector::IsValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d28/classFSphericalSector.html#a964f37e6a4f45b8f62431a04072aa69e",tooltip=" "];
  Node21 -> Node22 [id="edge23_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="FStreamingSourceShapeHelper\l::ForEachShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/dce/classFStreamingSourceShapeHelper.html#a0175346802e1004a8919c6c45dc6192e",tooltip=" "];
  Node22 -> Node23 [id="edge24_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="FWorldPartitionStreaming\lSource::ForEachShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d3b/structFWorldPartitionStreamingSource.html#aef634712330db864356588e4c7d16317",tooltip="Helper method that iterates over all shapes."];
  Node23 -> Node24 [id="edge25_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="FWorldPartitionStreaming\lSource::CalcBounds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d3b/structFWorldPartitionStreamingSource.html#aba4b9b7ade68adba38b88d91981b0526",tooltip="Returns a box encapsulating all shapes."];
  Node24 -> Node24 [id="edge26_Node000024_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node25 [id="edge27_Node000022_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="FWorldPartitionStreaming\lSource::ForEachShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d3b/structFWorldPartitionStreamingSource.html#a427a93d0f127679698e3b525560693bf",tooltip="Helper method that iterates over all shapes affecting a specific grid."];
  Node1 -> Node26 [id="edge28_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="HarmonixDsp::PanToGainsConstant\lPower",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/db6/namespaceHarmonixDsp.html#a1c8350804aa6e78a079663d2e5e36226",tooltip=" "];
  Node1 -> Node27 [id="edge29_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="IntersectionUtil::RayCircle\lIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d8c/namespaceIntersectionUtil.html#a7591a918a4d9c84463a2b728ce95b569",tooltip="Intersect ray with circle and return intersection info (# hits, ray parameters)"];
  Node1 -> Node28 [id="edge30_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="FMath::RESOLVE_FLOAT\l_PREDICATE_AMBIGUITY\l_2_ARGS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d20/structFMath.html#aa45464f97ac2193ab9f8d919226f7fa2",tooltip=" "];
  Node1 -> Node29 [id="edge31_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Math::TRotator\l::ToCompactString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dd7/structUE_1_1Math_1_1TRotator.html#a669598e9ed4b556c9f364029262a2efe",tooltip="Get a short textural representation of this vector, for compact readable logging."];
  Node1 -> Node30 [id="edge32_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="UE::Math::TVector::\lToCompactString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#ae7099c6b621a8e2067ec3524fc19988a",tooltip="Get a short textural representation of this vector, for compact readable logging."];
  Node1 -> Node31 [id="edge33_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="UE::Math::TVector::\lToCompactText",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#af68531f08f9a6c23214344e64d6f263d",tooltip="Get a short locale aware textural representation of this vector, for compact readable logging."];
  Node1 -> Node32 [id="edge34_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="USTRUCT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc4/MovieSceneTimeTransform_8h.html#a77a83e26832f43d482a1dedb74bebbe4",tooltip="Movie scene sequence transform class that transforms from one time-space to another."];
}
