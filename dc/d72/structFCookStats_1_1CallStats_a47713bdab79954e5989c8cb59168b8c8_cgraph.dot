digraph "FCookStats::CallStats::LogStats"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FCookStats::CallStats\l::LogStats",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Used to log the instance in a common way."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FCookStatsManager::\lCreateKeyValueArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d3c/classFCookStatsManager.html#ac7edc21e2927a647262b1c6ba319d016",tooltip="Helper to create an array of KeyValues using a single expression."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::Empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#ae4faf7d28150050064620a725e5df3c2",tooltip="Empties the array."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Forward",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a68f280c1d561a8899a1e9e3ea8405d00",tooltip="Forward will cast a reference to an rvalue reference."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FCookStatsManager::\lImplCreateKeyValueArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d3c/classFCookStatsManager.html#a46a225214e961a259b2c8107c2e1604c",tooltip=" "];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TArray::Emplace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a084ac3e03e7fe74b0b2d28cd8695c197",tooltip="Constructs a new item at the end of the array, possibly reallocating the whole array to fit."];
  Node5 -> Node4 [id="edge6_Node000005_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node7 [id="edge7_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="LexToString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/de7/MetasoundFrontendDocument_8h.html#aa10724c394a22c4d59419d058c863548",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FCookStats::CallStats\l::GetAccumulatedValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d72/structFCookStats_1_1CallStats.html#a9a3ee79eb6ab83a9b54e182d0a0d99b7",tooltip="Make it easier to access an accumulator using a uniform, stronly typed interface."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FGenericPlatformTime\l::GetSecondsPerCycle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d9b/structFGenericPlatformTime.html#a5a95c67088086aa0eab4dff5ca0786d2",tooltip="Each platform implements these two functions, which return the current time in platform-specific cpu ..."];
}
