digraph "FSparseDelegateStorage::GetSharedMulticastDelegate"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FSparseDelegateStorage\l::GetSharedMulticastDelegate",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Acquires the actual Multicast Delegate from the annotation if any delegates are bound to it as a shar..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TSparseDynamicDelegate\l::GetShared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d28/structTSparseDynamicDelegate.html#a05ac418f62f3ecc9d2fec5c91711a230",tooltip="Returns the multicast delegate if any delegates are bound to the sparse delegate."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TSparseDynamicDelegate\l::Broadcast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d28/structTSparseDynamicDelegate.html#aff735e10d1a242339372daf2da8cf755",tooltip="Broadcasts this delegate to all bound objects, except to those that may have expired."];
}
