digraph "FQueuedThreadPoolTaskGraphWrapper::GetDefaultPriorityMapping"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="FQueuedThreadPoolTaskGraph\lWrapper::GetDefaultPriorityMapping",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FQueuedThreadPoolTaskGraph\lWrapper::FQueuedThreadPoolTask\lGraphWrapper",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d90/classFQueuedThreadPoolTaskGraphWrapper.html#adef94b9d5a45cabb2860b2660da1df40",tooltip="InPriorityMapper Thread-safe function used to map any priority from this Queue to the priority that s..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FQueuedThreadPoolTaskGraph\lWrapper::AddQueuedWork",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d90/classFQueuedThreadPoolTaskGraphWrapper.html#af2114a8addf95c9acfa7290de0c38fc6",tooltip="Checks to see if there is a thread available to perform the task."];
}
