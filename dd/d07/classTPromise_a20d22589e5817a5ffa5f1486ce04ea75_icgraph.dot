digraph "TPromise::GetFuture"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TPromise::GetFuture",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Gets a TFuture object associated with the shared state of this promise."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TAsyncResult::TAsyncResult",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d1a/classTAsyncResult.html#aaa96a8de1c91f61edfb9d441391a2813",tooltip="Creates and initializes a new instance with the given synchronous result value."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Async",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a974ce2dd50eecf01a05bec0d82846034",tooltip="Execute a given function asynchronously."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UHierarchicalInstancedStatic\lMeshComponent::BuildTreeIfOutdated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d38/classUHierarchicalInstancedStaticMeshComponent.html#a537388cb100b87e35c9a4ee3c88f86bd",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="AsyncPool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a0ea2ab2d97853a2d1acf3b0e95a40e8c",tooltip="Execute a given function asynchronously on the specified thread pool."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="AsyncThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a811303839cdbbea713a15aec4b302e0d",tooltip="Execute a given function asynchronously using a separate thread."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TFutureBase::Then",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d71/classTFutureBase.html#a8b5991edb4ad504e570a9571310a8eb8",tooltip="Set a completion callback that will be called once the future completes or immediately if already com..."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TFutureBase::Next",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d71/classTFutureBase.html#a8e91bc9a4bca91c3386efb1c69b6d9ec",tooltip="Convenience wrapper for Then that set a completion callback that will be called once the future compl..."];
}
