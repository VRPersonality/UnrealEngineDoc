digraph "TPromise::SetValue"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TPromise::SetValue",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Sets the promised result."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TAsyncResult::TAsyncResult",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d1a/classTAsyncResult.html#aaa96a8de1c91f61edfb9d441391a2813",tooltip="Creates and initializes a new instance with the given synchronous result value."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Async",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a974ce2dd50eecf01a05bec0d82846034",tooltip="Execute a given function asynchronously."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UHierarchicalInstancedStatic\lMeshComponent::BuildTreeIfOutdated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d38/classUHierarchicalInstancedStaticMeshComponent.html#a537388cb100b87e35c9a4ee3c88f86bd",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="AsyncThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a811303839cdbbea713a15aec4b302e0d",tooltip="Execute a given function asynchronously using a separate thread."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="SetPromise",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a98134839f3012c0916b881f90a4035d7",tooltip="Template for setting a promise value from a callable."];
  Node6 -> Node3 [id="edge6_Node000006_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node5 [id="edge7_Node000006_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TAsyncGraphTask::DoTask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d21/classTAsyncGraphTask.html#a38e8e355019ef5a1bb822183b29c0196",tooltip="Performs the actual task."];
  Node6 -> Node8 [id="edge9_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TAsyncQueuedWork::DoThreadedWork",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d67/classTAsyncQueuedWork.html#a8e069d62f66d6d19340b4ae079e163ab",tooltip="This is where the real thread work is done."];
  Node6 -> Node9 [id="edge10_Node000006_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TAsyncRunnable::Run",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d7d/classTAsyncRunnable.html#af8087058e710df4564942cd6f0f07b93",tooltip="Runs the runnable object."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="SetPromise",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/ddf/Async_8h.html#a08fabde55eb4ed36c7bb5c44c856c962",tooltip=" "];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="FutureDetail::SetPromise\lValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dde/namespaceFutureDetail.html#adde8e51a8ec01ae03f1ade991339fab7",tooltip="Template for setting a promise value from a continuation."];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TFutureBase::Then",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d71/classTFutureBase.html#a8b5991edb4ad504e570a9571310a8eb8",tooltip="Set a completion callback that will be called once the future completes or immediately if already com..."];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="TFutureBase::Next",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d71/classTFutureBase.html#a8e91bc9a4bca91c3386efb1c69b6d9ec",tooltip="Convenience wrapper for Then that set a completion callback that will be called once the future compl..."];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FutureDetail::SetPromise\lValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dde/namespaceFutureDetail.html#a9dd642d6fe58a5cd9024cc8b9c58481d",tooltip=" "];
}
