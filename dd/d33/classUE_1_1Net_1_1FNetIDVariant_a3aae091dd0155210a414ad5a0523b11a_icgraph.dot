digraph "UE::Net::FNetIDVariant::FNetIDVariant"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Net::FNetIDVariant\l::FNetIDVariant",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Constructs a variant holding an FEmptyID."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Net::FNetIDVariant\l::operator\<\<",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d33/classUE_1_1Net_1_1FNetIDVariant.html#a52fb5d84472a572583bb51ad85f1b8bb",tooltip="Serializes or deserializes the stored ID or handle, suitable for networking."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Net::FNetIDVariant\l::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d33/classUE_1_1Net_1_1FNetIDVariant.html#a7f692e837c10384b96d86eb414159394",tooltip="Equality comparison."];
}
