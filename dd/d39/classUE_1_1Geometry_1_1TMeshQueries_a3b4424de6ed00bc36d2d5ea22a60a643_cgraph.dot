digraph "UE::Geometry::TMeshQueries::HausdorffDistanceSerial"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::TMeshQueries\l::HausdorffDistanceSerial",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute all distances in serial, then a serial raw loop to find max."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TMeshQueries\l::VertexToSurfaceDistancesSerial",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a3b57b68ebf07333c9002d124db49e378",tooltip="Compute all vertex-to-surface distances in serial. Should only be used for debugging the parallel ver..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TArray::SetNumZeroed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#aa8b0ab747139cf02306b55e5f64caf47",tooltip="Resizes array to given number of elements, optionally shrinking it."];
}
