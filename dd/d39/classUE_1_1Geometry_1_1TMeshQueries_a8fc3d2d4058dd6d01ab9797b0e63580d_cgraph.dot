digraph "UE::Geometry::TMeshQueries::HausdorffDistance"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::TMeshQueries\l::HausdorffDistance",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute all vertex-to-surface distances in parallel."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TMeshQueries\l::VertexToSurfaceDistances",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d39/classUE_1_1Geometry_1_1TMeshQueries.html#a270389c3c4eb4af9996ac351099412d7",tooltip="For each vertex on MeshA, compute the distance to the nearest point on the surface contained in Spati..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/da1/ParallelFor_8h.html#a68b625089b9c041b662a1605dbef98f0",tooltip="General purpose parallel for that uses the taskgraph."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TArray::SetNumZeroed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#aa8b0ab747139cf02306b55e5f64caf47",tooltip="Resizes array to given number of elements, optionally shrinking it."];
}
