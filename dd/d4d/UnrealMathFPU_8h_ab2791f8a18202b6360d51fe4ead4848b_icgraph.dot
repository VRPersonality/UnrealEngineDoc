digraph "VectorAdd"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="VectorAdd",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Adds two vectors (component-wise) and returns the result."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TAudioBuffer\< float\l \>::_AccumulateSIMD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d2f/classTAudioBuffer.html#af4ba851b3028e9c855fb520a13852dc5",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TAudioBuffer\< float\l \>::_MultiplyAccumulateSIMD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d2f/classTAudioBuffer.html#a06d6d6eb6d2728cecfc328af8d277b52",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FGainMatrix::ApplyAndAccumulate\lToBuffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d15/classFGainMatrix.html#a8e2329dbf5b750b9a13dc3bb308c9893",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TQuat::Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a88f4dac61ee334e190b200393b3226df",tooltip="Checks whether another Quaternion is equal to this, within specified tolerance."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TQuat::IsIdentity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a52ed12158a31cb8874be06a84ee5c768",tooltip="Checks whether this Quaternion is an Identity Quaternion."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FOctreeNodeContext\l::GetChildContext",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d87/classFOctreeNodeContext.html#a1185662f38eb6b1db47776cc98525d18",tooltip="Child node initialization constructor."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TOctree2\< FVolumeLighting\lSample, FLightVolumeOctreeSemantics\l \>::AddElementInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/classTOctree2.html#a5110dbbe8a7f5325c1924565400d3596",tooltip=" "];
  Node7 -> Node9 [id="edge8_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TOctree2\< FVolumeLighting\lSample, FLightVolumeOctreeSemantics\l \>::FindElementsWithBoundsTestInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/classTOctree2.html#ac54ebc520b5bef71709ae2ce22c09684",tooltip=" "];
  Node7 -> Node10 [id="edge9_Node000007_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TOctree2\< FVolumeLighting\lSample, FLightVolumeOctreeSemantics\l \>::FindFirstElementWithBoundsTestInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/classTOctree2.html#a90bf025db87e9bf861bff6f39a7695af",tooltip=" "];
  Node7 -> Node11 [id="edge10_Node000007_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TOctree2\< FVolumeLighting\lSample, FLightVolumeOctreeSemantics\l \>::FindNearbyElementsInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/classTOctree2.html#a45503122961c2f78eb00f821735fb9a2",tooltip=" "];
  Node7 -> Node12 [id="edge11_Node000007_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TOctree2\< FVolumeLighting\lSample, FLightVolumeOctreeSemantics\l \>::FindNodesWithPredicateInternal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/classTOctree2.html#aabbb6a5388e07fe1c672d079a4fc307d",tooltip=" "];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="FOctreeNodeContext\l::GetChildContext",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d87/classFOctreeNodeContext.html#a70f217e91f150b67537849366a0ac811",tooltip="Construct a child context given the child ref."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FOctreeNodeContext\l::GetChildContext",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d87/classFOctreeNodeContext.html#a331029ecc748bd9268ffe0bf2ab88975",tooltip="Child node initialization constructor."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="FBoxCenterAndExtent\l::Intersect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d51/classFBoxCenterAndExtent.html#a1dbabac77d16377550fbba3782fdd167",tooltip="Determines whether two boxes intersect."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="FBoxCenterAndExtent\l::Intersect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d51/classFBoxCenterAndExtent.html#a15e6a5e62e849e8e00ba1423c6b91e52",tooltip="Determines whether two boxes intersect."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="FBoxCenterAndExtent\l::Intersect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d51/classFBoxCenterAndExtent.html#aa4f55a633639bf50ddd39a2dd813147d",tooltip="Determines whether two boxes intersect."];
  Node1 -> Node18 [id="edge17_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="FGainMatrix::Lerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d15/classFGainMatrix.html#ae6a92e44b184eb795009ab5f8d320f5f",tooltip=" "];
  Node1 -> Node19 [id="edge18_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Math::TQuat::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#aeeb27ba8ccda7c10ee5504bae74b2351",tooltip="Gets the result of adding a Quaternion to this."];
  Node1 -> Node20 [id="edge19_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Math::TQuat::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d4a/structUE_1_1Math_1_1TQuat.html#a444a2b01431ce87913aa54c3c2168ddb",tooltip="Adds to this quaternion."];
  Node1 -> Node21 [id="edge20_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Harmonix::Dsp::Effects\l::FFourBiquads::Process",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/de3/classHarmonix_1_1Dsp_1_1Effects_1_1FFourBiquads.html#a629b494ec17110e2f3a8f0801c5c7f60",tooltip=" "];
  Node1 -> Node22 [id="edge21_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Harmonix::Dsp::Effects\l::FFourBiquads::Process",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/de3/classHarmonix_1_1Dsp_1_1Effects_1_1FFourBiquads.html#ab0e8058226e3340d6b5f614c262d4e00",tooltip=" "];
  Node1 -> Node23 [id="edge22_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Harmonix::Dsp::Effects\l::FFourBiquads::ProcessOne",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/de3/classHarmonix_1_1Dsp_1_1Effects_1_1FFourBiquads.html#a823e71d593b79bc15a0d32f294084e79",tooltip=" "];
  Node1 -> Node24 [id="edge23_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="UE::Math::TBox::TransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a4da40700812895d22e4b067ef716f82e",tooltip="Gets a bounding volume transformed by a matrix."];
  Node24 -> Node25 [id="edge24_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="FInstancedSkinnedMeshComponent\lHelper::CalcBounds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dc5/classFInstancedSkinnedMeshComponentHelper.html#aace207d021e8155a68666a2bb2497dbb",tooltip=" "];
  Node24 -> Node26 [id="edge25_Node000024_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="FInstancedStaticMeshComponent\lHelper::GetNavigationPerInstance\lTransforms",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d11/classFInstancedStaticMeshComponentHelper.html#a00ce52aeac2ea9b2197ee70439ecc8bb",tooltip=" "];
  Node24 -> Node27 [id="edge26_Node000024_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="UE::Math::TBox::TransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a728154f69fc0a6ba2b4f40f891951f13",tooltip="Gets a bounding volume transformed by a TTransform<T> object."];
  Node1 -> Node28 [id="edge27_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="UE::Math::TBoxSphereBounds\l::TransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dc5/structUE_1_1Math_1_1TBoxSphereBounds.html#aab6e193887fac9b908753eb27beea8b5",tooltip="Gets a bounding volume transformed by a matrix."];
  Node28 -> Node29 [id="edge28_Node000028_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="UE::Math::TBoxSphereBounds\l::TransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dc5/structUE_1_1Math_1_1TBoxSphereBounds.html#ac1b8bf18ce3c47d29430eb90f8b3a46b",tooltip="Gets a bounding volume transformed by a FTransform object."];
}
