digraph "FLayoutGeometry::GetRectInParentSpace"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FLayoutGeometry::GetRect\lInParentSpace",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FLayoutGeometry::GetRect\lInLocalSpace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dc3/classFLayoutGeometry.html#ae6036530d6b00b5ace8c34673a1b9ca1",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TransformRect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/df8/SlateRect_8h.html#a1d6ec4ca45a1f57dc1248fcc4c7ce491",tooltip="Transforms a rect by the given transform, ensuring the rect does not get inverted."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TransformPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9f/TransformCalculus_8h.html#aa09af41c65b0384ba8b55522675551e1",tooltip="Generic implementation of TransformPoint."];
}
