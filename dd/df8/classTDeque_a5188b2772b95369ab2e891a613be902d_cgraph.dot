digraph "TDeque::TryPopFirst"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TDeque::TryPopFirst",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="DestructItem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dea/MemoryOps_8h.html#a477c2edd170f23dc245b5c5ac7822e66",tooltip="Destructs a single item in memory."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TDeque::GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#ae8c1ea114357c2480e35439759dc1ebb",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDeque::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#a2522cfd1fb7258b7648a4152e861a818",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="MoveTempIfPossible",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#aa0a9897f3eb4c8a5771f3702d2ed9819",tooltip="MoveTempIfPossible will cast a reference to an rvalue reference."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Deque::Private\l::WrapAround",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d41/namespaceUE_1_1Deque_1_1Private.html#afddeb11d12e92c6c93faf342492fcc3f",tooltip="This implementation assumes that the Index value is never going to exceed twice the Range value."];
}
