digraph "TDeque::PushFirst"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TDeque::PushFirst",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TDeque::EmplaceFirst",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#a6563f12d2122f0ecd800fdf890857907",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Forward",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d24/UnrealTemplate_8h.html#a68f280c1d561a8899a1e9e3ea8405d00",tooltip="Forward will cast a reference to an rvalue reference."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TDeque::GetData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#ae8c1ea114357c2480e35439759dc1ebb",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TDeque::GrowIfRequired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#a52fb92a308bbb1a1773d99754cc90ec2",tooltip="Grows the container to the next capacity value (determined by the storage allocator) if full."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TDeque::Grow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#abf481b32f1b6a24f0f5e72e8558b2836",tooltip="Grows the container's storage to the parameter capacity value."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TDeque::Linearize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#a7dccdc8fc45c08eaf166d043a960b2de",tooltip="Shifts the contained range to the beginning of the storage so it's linear."];
  Node7 -> Node4 [id="edge7_Node000007_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="RelocateConstructItems",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dea/MemoryOps_8h.html#ad26b4943c0245a6d447b3f69bfdbbf35",tooltip="Relocates a range of items to a new memory location as a new type."];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FMemory::Memmove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d4a/structFMemory.html#a79d3be0945272bfb7e90a7f627c417e4",tooltip=" "];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FGenericPlatformMemory\l::Memmove",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dfd/structFGenericPlatformMemory.html#a6764c99e53febebbd69236190a4675bd",tooltip="Copies count bytes of characters from Src to Dest."];
  Node7 -> Node11 [id="edge11_Node000007_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TDeque::ShiftElementsLeft",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/df8/classTDeque.html#a11074d2f7c0cc7ccfd2158fd68f3779f",tooltip="Moves the parameter number of elements to the left shifting the head to the beginning of the storage."];
  Node11 -> Node4 [id="edge12_Node000011_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node8 [id="edge13_Node000011_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node12 [id="edge14_Node000002_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Deque::Private\l::WrapAround",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d41/namespaceUE_1_1Deque_1_1Private.html#afddeb11d12e92c6c93faf342492fcc3f",tooltip="This implementation assumes that the Index value is never going to exceed twice the Range value."];
}
