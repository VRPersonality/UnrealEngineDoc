digraph "UE::Math::TVector::GetSafeNormal"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="UE::Math::TVector::\lGetSafeNormal",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Gets a normalized copy of the vector, checking it is safe to do so based on the length."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Math::TPlane::TPlane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d58/structUE_1_1Math_1_1TPlane.html#abea0b843f426ce0643fc6baf413ad7ce",tooltip="Constructor."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="FBuoyancyComponentSim\l::ApplyLinearDrag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d86/classFBuoyancyComponentSim.html#a42dfe7a89b7aba67e05935c621535633",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FBuoyancyComponentSim\l::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d86/classFBuoyancyComponentSim.html#a1aff1e17c06b8921ae11c5ce0a371952",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="FBuoyancyComponentSim\l::ComputeWaterForce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d86/classFBuoyancyComponentSim.html#a0094effe16420c69981242a0c2891fcc",tooltip=" "];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FBuoyancyComponentSim\l::ApplyWaterForce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d86/classFBuoyancyComponentSim.html#abbb03cf4fefa3995689fa6045394c8b8",tooltip=" "];
  Node6 -> Node4 [id="edge6_Node000006_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TVector::\lFindBestAxisVectors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#ac840f5b39911237f46cd054c47f7ae5d",tooltip="Find good arbitrary axis vectors to represent U and V axes of a plane, using this vector as the norma..."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TVector::\lHeadingAngle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a0dbb5a50b9c8e20eee0a3b369dd656ef",tooltip="Convert a direction vector into a 'heading' angle."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Math::TRotationMatrix\l::MakeFromX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a8398be6ebe24c27e9749cc419f79fe12",tooltip="Builds a rotation matrix given only a XAxis."];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TRotationMatrix\l::MakeFromXY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a83de548b5582302d40f55bf147a87ff0",tooltip="Builds a matrix with given X and Y axes."];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TRotationMatrix\l::MakeFromXZ",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#ab8839beb4acc91fe9604aee7503f6001",tooltip="Builds a matrix with given X and Z axes."];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Math::TRotationMatrix\l::MakeFromY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a99ff3328b1f929a1c4eb2ee00b85b35f",tooltip="Builds a rotation matrix given only a YAxis."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TRotationMatrix\l::MakeFromYX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a24ad8fcc711f1d978e3cc831115696ed",tooltip="Builds a matrix with given Y and X axes."];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TRotationMatrix\l::MakeFromYZ",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a61d2c9cccceca213bb215a783e48afdd",tooltip="Builds a matrix with given Y and Z axes."];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Math::TRotationMatrix\l::MakeFromZ",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a0ca8b6f32423c9c3a61151147ef0e918",tooltip="Builds a rotation matrix given only a ZAxis."];
  Node1 -> Node16 [id="edge16_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Math::TRotationMatrix\l::MakeFromZX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#afb62a98279fac8c0e0b93847e91d4d04",tooltip="Builds a matrix with given Z and X axes."];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Math::TRotationMatrix\l::MakeFromZY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/structUE_1_1Math_1_1TRotationMatrix.html#a7505a9bb2875b05c33e38a1d40c9da00",tooltip="Builds a matrix with given Z and Y axes."];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Geometry::TOrientedBox3\l\< float \>::Merge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d7f/structUE_1_1Geometry_1_1TOrientedBox3.html#a340a0515619a6b2d84e4661111f26879",tooltip=" "];
  Node1 -> Node19 [id="edge19_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="FSphericalSector::SetAxis",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d28/classFSphericalSector.html#a9276be12722330bd1ce9b65337393743",tooltip=" "];
  Node1 -> Node20 [id="edge20_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="UE::Landscape::FHeightmap\lTexel::SetNormal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d3e/structUE_1_1Landscape_1_1FHeightmapTexel.html#a7fe6b68df04dc468b3aa1b8ab1ad3b67",tooltip=" "];
  Node1 -> Node21 [id="edge21_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="FRandomStream::VRandCone",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#ab89e8936689a01a558a9eb5d06ff6bae",tooltip="Returns a random unit vector, uniformly distributed, within the specified cone."];
  Node1 -> Node22 [id="edge22_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="FRandomStream::VRandCone",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/da3/structFRandomStream.html#a3ae967ab20840e24960eac782c582b6b",tooltip="Returns a random unit vector, uniformly distributed, within the specified cone."];
}
