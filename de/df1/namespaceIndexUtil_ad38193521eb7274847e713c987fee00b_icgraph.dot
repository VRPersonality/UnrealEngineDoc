digraph "IndexUtil::SamePairUnordered"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="IndexUtil::SamePairUnordered",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="IndexUtil::FindEdgeIndex\lInTri",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/namespaceIndexUtil.html#ab656d801de8e2f41ec0f62dba2ebd727",tooltip="Find unordered edge [VertexID1,VertexID2] in TriangleVerts."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="IndexUtil::FindTriOtherIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/namespaceIndexUtil.html#a870f43a17103499ef4c76d681504c86a",tooltip="Find ordered edge [VertexID1,VertexID2] in TriangleVerts and then return the index of the remaining t..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="IndexUtil::FindTriOtherVtx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/namespaceIndexUtil.html#a3e3bd66f63cfe0c9e177fc91b29f7637",tooltip="Find ordered edge [VertexID1,VertexID2] in a triangle that is in an array of triangles,..."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="IndexUtil::FindTriOtherVtx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/namespaceIndexUtil.html#a57c92255088f0f55c6833f248b5a7688",tooltip="Find ordered edge [VertexID1,VertexID2] in TriangleVerts and then return the remaining third vertex."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="IndexUtil::OrientTriEdge\lAndFindOtherVtx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/df1/namespaceIndexUtil.html#a5340b7f94561562cbc4d26c471a279c6",tooltip="Assuming [Vertex1,Vertex2] is an unordered edge in TriangleVerts, return Vertex1 and Vertex2 in the c..."];
}
