digraph "UE::Geometry::FIterativeOffsetMeshOp::Offset_Smoothed"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="UE::Geometry::FIterative\lOffsetMeshOp::Offset_Smoothed",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::TMeshAABBTree3\l::Build",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc1/classUE_1_1Geometry_1_1TMeshAABBTree3.html#a593ffda9e30e47bad1616b5a9be3c32a",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Geometry::FMeshNormals\l::ComputeVertexNormals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbe/classUE_1_1Geometry_1_1FMeshNormals.html#a97c4ac1a5b66f07a4977f269bdd464f1",tooltip="Compute standard per-vertex normals by averaging one-ring face normals."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::FMeshNormals\l::Compute_FaceAvg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbe/classUE_1_1Geometry_1_1FMeshNormals.html#a404555be9681f75f89957316229641f3",tooltip="Compute per-vertex normals using a custom combination of area-weighted and angle-weighted averaging o..."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::FDynamicMesh3\l::Copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a178849b645e6807449f887b2e155bcd1",tooltip="Set internal data structures to be a copy of input mesh using the specified attributes."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::FDynamicMesh3\l::FDynamicMesh3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#af7477b3cc863bc9c125a01d1dd70b134",tooltip="Default constructor."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::TMeshAABBTree3\l::FindNearestPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc1/classUE_1_1Geometry_1_1TMeshAABBTree3.html#aaad3609544ddc528a0fb7f9062808061",tooltip="Convenience function that calls FindNearestTriangle and then finds nearest point."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::FMeshNormals\l::GetNormals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dbe/classUE_1_1Geometry_1_1FMeshNormals.html#ac186c2014f61a2ba90a869832a4cadf2",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Geometry::FMeshOffset\lBaseOp::GetOffsetDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d81/classUE_1_1Geometry_1_1FMeshOffsetBaseOp.html#a270ed4c34153f34d1a6671d8b9744593",tooltip=" "];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TMathUtil\< double \>\l::Clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8b/classTMathUtil.html#a5140b8f6ca300865afb4f248051d5b08",tooltip=" "];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Geometry::Lerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#acbc1ebe7ebf2dfa4a7f32b05b9a84dc2",tooltip=" "];
  Node11 -> Node11 [id="edge11_Node000011_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="ParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/da1/ParallelFor_8h.html#a68b625089b9c041b662a1605dbef98f0",tooltip="General purpose parallel for that uses the taskgraph."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Geometry::TMeshAABBTree3\l::SetMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc1/classUE_1_1Geometry_1_1TMeshAABBTree3.html#a3478f030d8ba2b507c477aa3f122ae35",tooltip=" "];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Geometry::FDynamicMesh3\l::SetVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a2c2c5d57a02be4fda3a9813c57ee86be",tooltip="Set vertex position."];
  Node14 -> Node15 [id="edge15_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Geometry::VectorUtil\l::IsFinite",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a0a51e65e89e1fc649f40baac17052ea0",tooltip=" "];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TMathUtil::IsFinite",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d8b/classTMathUtil.html#a288d52b034a44372d37027a4cd5cf3ed",tooltip=" "];
  Node14 -> Node17 [id="edge17_Node000014_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Geometry::FDynamicMesh3\l::IsVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#a93b441f84cc969efbd03235000222643",tooltip=" "];
  Node14 -> Node18 [id="edge18_Node000014_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Geometry::FDynamicMesh3\l::UpdateChangeStamps",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d27/classUE_1_1Geometry_1_1FDynamicMesh3.html#ae214ebf143760af35e963863ecf09024",tooltip="Increment the specified ChangeStamps, if they are enabled."];
  Node1 -> Node19 [id="edge19_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Geometry::FMeshWeights\l::UniformCentroid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/dc7/classUE_1_1Geometry_1_1FMeshWeights.html#a897c5f139743a901928c01aa2e640a69",tooltip="Compute uniform centroid of a vertex one-ring."];
}
