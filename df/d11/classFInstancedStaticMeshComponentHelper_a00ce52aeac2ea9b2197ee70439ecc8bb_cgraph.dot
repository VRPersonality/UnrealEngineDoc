digraph "FInstancedStaticMeshComponentHelper::GetNavigationPerInstanceTransforms"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="FInstancedStaticMeshComponent\lHelper::GetNavigationPerInstance\lTransforms",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TArray::Add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d52/classTArray.html#a94f6bf2bef04382fc79010abad57d823",tooltip="Adds a new item to the end of the array, possibly reallocating the whole array to fit."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Math::TBoxSphereBounds\l::GetBox",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dc5/structUE_1_1Math_1_1TBoxSphereBounds.html#a6c7a1ab76989373935dd2db457c37330",tooltip="Gets the bounding box."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="FInstancedStaticMeshComponent\lHelper::GetInstanceNavigationBounds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d11/classFInstancedStaticMeshComponentHelper.html#ac2f8717ed20d278922ee95bddbde55b0",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Math::TTransform\l::GetScale3D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a950a53a98989e255da1aca27ee8cf8b0",tooltip="Returns the Scale3D component."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Math::TBox::Intersect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a0f9fae8b67a916fde3de0d677965e212",tooltip="Checks whether the given bounding box intersects this bounding box."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Math::TBox::TBox",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a3b3e9994a1076bb8a650eb347fcb390e",tooltip="Default constructor."];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Math::TBox::Diagnostic\lCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a5fcfa8bad37f8f30ec7d6977218888a4",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Math::TBox::InverseTransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a44e4ff9f8caf85424aaf1d91d0e400fd",tooltip="Gets a bounding volume transformed by an inverted TTransform<T> object."];
  Node9 -> Node7 [id="edge9_Node000009_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Math::TBox::GetVertices",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a7f955a65e2a69876d4e7421d2d521fea",tooltip="Get the vertices that make up this box."];
  Node10 -> Node8 [id="edge11_Node000010_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node11 [id="edge12_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Math::TTransform\l::InverseTransformPosition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a4cb67cafc9c6fe002eac43f9dfc198c3",tooltip="Inverts the transform and then transforms V - correctly handles scaling in this transform."];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Math::TTransform\l::DiagnosticCheckNaN_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#aa084e7b9cf8562aa93b41f704a6de991",tooltip=" "];
  Node11 -> Node13 [id="edge14_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Math::TTransform\l::GetSafeScaleReciprocal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/db6/structUE_1_1Math_1_1TTransform.html#a10e2cf4be0eb2b4853360f878c4fde91",tooltip=" "];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Math::TVector::\lIsZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d77/structUE_1_1Math_1_1TVector.html#a072047d4abab34f5c26ff69a35b21677",tooltip="Checks whether all components of the vector are exactly zero."];
  Node1 -> Node15 [id="edge16_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Math::TBox::TransformBy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5f/structUE_1_1Math_1_1TBox.html#a4da40700812895d22e4b067ef716f82e",tooltip="Gets a bounding volume transformed by a matrix."];
  Node15 -> Node7 [id="edge17_Node000015_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node8 [id="edge18_Node000015_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge19_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="VectorAbs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#ab1e23c42a5e914b9b09f84afeb306f3e",tooltip="Returns the absolute value (component-wise)."];
  Node15 -> Node17 [id="edge20_Node000015_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="VectorAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#ab2791f8a18202b6360d51fe4ead4848b",tooltip="Adds two vectors (component-wise) and returns the result."];
  Node15 -> Node18 [id="edge21_Node000015_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="VectorLoadAligned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#a795bf143be99fa9c21053ce7ee7367ee",tooltip="Loads 4 FLOATs from aligned memory."];
  Node18 -> Node19 [id="edge22_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="VectorLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#acf012ed0bd0dbebc7aadab0ba8a1f808",tooltip="Loads 4 FLOATs from unaligned memory."];
  Node19 -> Node20 [id="edge23_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="MakeVectorRegisterFloat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#aefc67d5a07d1692613a29d8c9f71e815",tooltip="Returns a bitwise equivalent vector based on 4 DWORDs."];
  Node15 -> Node21 [id="edge24_Node000015_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="VectorMultiply",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#a498979d68d58aebba11252fe447acc0e",tooltip="Multiplies two vectors (component-wise) and returns the result."];
  Node15 -> Node22 [id="edge25_Node000015_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="VectorMultiplyAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#a7b3b90687c15dfd774ce13e0495338ce",tooltip="Multiplies two vectors (component-wise), adds in the third vector and returns the result."];
  Node15 -> Node23 [id="edge26_Node000015_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="VectorSetFloat1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#a3d69587d3a368ee706a6e30994fd8683",tooltip="Propagates passed in float to all registers."];
  Node23 -> Node20 [id="edge27_Node000023_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node24 [id="edge28_Node000015_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="VectorStoreFloat3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#ae7524dedf8ec165fdd4d72f734a026e2",tooltip="Stores the XYZ components of a vector to unaligned memory."];
  Node24 -> Node25 [id="edge29_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="FMemory::Memcpy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d4a/structFMemory.html#af5c0a2f1987809876d6d72269851e89c",tooltip=" "];
  Node25 -> Node26 [id="edge30_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="FGenericPlatformMemory\l::Memcpy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dfd/structFGenericPlatformMemory.html#a13ca9511967a7af8d1c2c3beab1208e2",tooltip=" "];
  Node15 -> Node27 [id="edge31_Node000015_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="VectorSubtract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d4d/UnrealMathFPU_8h.html#a04bcec26a9b27581b52a59c6fa5e2082",tooltip="Subtracts a vector from another (component-wise) and returns the result."];
}
