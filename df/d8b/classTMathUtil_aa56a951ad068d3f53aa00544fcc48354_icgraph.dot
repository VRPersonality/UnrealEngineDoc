digraph "TMathUtil::ACos"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="TMathUtil::ACos",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="UE::Geometry::AngleD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a2fe4146ed11160b4ac46fa63a0895961",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UE::Geometry::TPolygon2\l\< double \>::Chamfer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#ac36dea48df15e4bd04dd831ee78d9344",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="UE::Geometry::FDynamicGraph2\l\< double \>::OpeningAngle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d56/classUE_1_1Geometry_1_1FDynamicGraph2.html#a08a1606c6dd0021eb4dd8a3933336240",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="UE::Geometry::VectorUtil\l::OpeningAngleD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#ad615d64a4004a150419fec3d996bceb2",tooltip=" "];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="UE::Geometry::TPolygon2\l\< double \>::OpeningAngleDeg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#ae7bc32f9f540b4f4fa7b144a71ba8251",tooltip=" "];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="UE::Geometry::VectorUtil\l::PlaneAngleSignedD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a47803304da6f40f39a2cab3293098bf8",tooltip="Calculates angle between VFrom and VTo after projection onto plane with normal defined by PlaneN."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="UE::Geometry::TFrame3\l\< float \>::ConstrainedAlignAxis",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d82/structUE_1_1Geometry_1_1TFrame3.html#a2aa34553021af7d4e3ff5879ff0b123b",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="UE::Geometry::AngleD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a4239a263b6d4d6f8d7ebb901e79bd131",tooltip="Computes the Angle between V1 and V2, assuming they are already normalized."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="UE::Geometry::AngleR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a1ec53c5618c4fda95d8bf3cc4b58357a",tooltip=" "];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="UE::Geometry::AsZeroToTwoPi",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#ae0eff329cb3cc3fbaf3297bc75f44d26",tooltip="return AngleR in [0,2pi) range."];
  Node10 -> Node12 [id="edge11_Node000010_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="UE::Geometry::VectorUtil\l::PlaneAngleSignedR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/dcb/namespaceUE_1_1Geometry_1_1VectorUtil.html#a7465b88088ad817bc7bef272241dd333",tooltip="Calculates angle between VFrom and VTo after projection onto plane with normal defined by PlaneN."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="UE::Geometry::AngleR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a334c9e9f3f3363f7b2629e549a153659",tooltip="Computes the Angle between V1 and V2, assuming they are already normalized."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="UE::Geometry::TSpherical\lFibonacci::Point",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d5a/classUE_1_1Geometry_1_1TSphericalFibonacci.html#a29042b90aa04106488e10acbf0d00bfa",tooltip=" "];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="UE::Geometry::TQuaternion\l::SetToSlerp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d55/structUE_1_1Geometry_1_1TQuaternion.html#a177084b3b672ce81999827b17ce15c42",tooltip=" "];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="UE::Geometry::TQuaternion\l::TQuaternion",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d55/structUE_1_1Geometry_1_1TQuaternion.html#abc0d0c5cd44532a6cc10daa13a2e036c",tooltip=" "];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="UE::Geometry::SignedAngleR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d39/namespaceUE_1_1Geometry.html#a904a398163732fcc98400a8d3ed7ff2b",tooltip=" "];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="UE::Geometry::CurveUtil\l::IsConvex2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dd2/namespaceUE_1_1Geometry_1_1CurveUtil.html#a6805ab43ad5b660d37a18cdeb77c3215",tooltip="Tests closed, 2D curve for convexity, with an optional tolerance allowing for approximately-collinear..."];
  Node18 -> Node19 [id="edge18_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="UE::Geometry::TPolygon2\l\< double \>::IsConvex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df8/classUE_1_1Geometry_1_1TPolygon2.html#a07ea5b619290ea839453f19e2a5ddc2c",tooltip=" "];
}
