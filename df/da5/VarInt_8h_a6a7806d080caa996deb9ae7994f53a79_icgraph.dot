digraph "MeasureVarUInt"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="MeasureVarUInt",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Measure the length in bytes (1-9) of an encoded variable-length integer."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="MeasureVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#ac93d323a7eb50f02535bdd081a61acca",tooltip="Measure the length in bytes (1-9) of an encoded variable-length integer."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="MeasureVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#abed26d4ff09fc1ec81d1b2b9099e10d6",tooltip="Measure the number of bytes (1-5) required to encode the 32-bit input."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="MeasureVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#ad55e96270c0c3b3e429686b9e9b24be6",tooltip="Measure the number of bytes (1-9) required to encode the 64-bit input."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="ReadVarUInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#aa309be035ad140b3f51ce0fdaabae455",tooltip="Read a variable-length unsigned integer."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="FCbValue::AsBinary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#aa0d855d8915f5eefda6ceca6e84aee6d",tooltip=" "];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="FCbValue::AsCustomById",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#a0aaf1f47181694fbc90bcf28c7c7806c",tooltip=" "];
  Node5 -> Node8 [id="edge7_Node000005_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="FCbValue::AsCustomByName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#acad9443fb46b5750e94f497ff09c47c8",tooltip=" "];
  Node5 -> Node9 [id="edge8_Node000005_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="FCbValue::AsInteger",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#aca6be98c9eb507b7efd56a6ce4c106bd",tooltip="Access as an integer, with both positive and negative values returned as unsigned."];
  Node5 -> Node10 [id="edge9_Node000005_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="FCbValue::AsIntegerNegative",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#a768692d81d462c392f27339d2b9cf036",tooltip=" "];
  Node5 -> Node11 [id="edge10_Node000005_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="FCbValue::AsIntegerPositive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#a5f93fd7df142816e14bb7dcda1f00f70",tooltip=" "];
  Node5 -> Node12 [id="edge11_Node000005_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="FCbValue::AsString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/dc5/classFCbValue.html#a8609f3fe71476e3b80ecde5f90a64d03",tooltip="Access as a string."];
  Node5 -> Node13 [id="edge12_Node000005_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="ReadVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#ad4223e3e8b50a3f3b593b32092d92d4f",tooltip="Read a variable-length signed integer."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="WriteVarUInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#a876ecdaf15ebf9bd97f1ceab2684c60c",tooltip="Write a variable-length unsigned integer."];
  Node14 -> Node15 [id="edge14_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="WriteVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#adf24571488d11cb1a11af4081a231699",tooltip="Write a variable-length signed integer."];
  Node14 -> Node16 [id="edge15_Node000014_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="WriteVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#a270f2678b7af94cbce5f2c2d9bb3cda0",tooltip="Write a variable-length signed integer."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="WriteVarUInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/VarInt_8h.html#a965ed1b4549a4c91e87d60a6a59cb26b",tooltip="Write a variable-length unsigned integer."];
}
