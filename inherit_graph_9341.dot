digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="TSizedHeapAllocator\l\< IndexSize, BaseMallocType \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d9a/classTSizedHeapAllocator.html",tooltip="The indirect allocation policy always allocates the elements indirectly."];
  Node0 -> Node1 [id="edge8406_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="TSizedDefaultAllocator\l\< 32 \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d48/classTSizedDefaultAllocator.html",tooltip=" "];
  Node1 -> Node2 [id="edge8407_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="FRangeChecklessAllocator\l\< DoRangeCheck \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/da6/classFRangeChecklessAllocator.html",tooltip=" "];
  Node0 -> Node3 [id="edge8408_Node000000_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TSizedDefaultAllocator\l\< IndexSize \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d48/classTSizedDefaultAllocator.html",tooltip="'typedefs' for various allocator defaults."];
}
